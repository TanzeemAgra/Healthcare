# Generated by Django 4.2.7 on 2025-09-21 08:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import hospital.registration_document_models


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("hospital", "0015_customuser_account_locked_until_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="RegistrationDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Uploaded document file",
                        upload_to=hospital.registration_document_models.registration_document_upload_path,
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(
                        help_text="Original filename as uploaded by user",
                        max_length=255,
                    ),
                ),
                ("file_size", models.BigIntegerField(help_text="File size in bytes")),
                (
                    "mime_type",
                    models.CharField(
                        help_text="MIME type of the uploaded file", max_length=100
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploaded", "Uploaded"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="uploaded",
                        max_length=20,
                    ),
                ),
                (
                    "validation_status",
                    models.JSONField(
                        default=dict, help_text="Detailed validation results"
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "review_notes",
                    models.TextField(
                        blank=True, help_text="Administrator notes about the document"
                    ),
                ),
                (
                    "upload_ip",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of uploader", null=True
                    ),
                ),
                (
                    "access_count",
                    models.IntegerField(
                        default=0, help_text="Number of times document was accessed"
                    ),
                ),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional document metadata"
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="Document expiry date (for licenses etc.)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Registration Document",
                "verbose_name_plural": "Registration Documents",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RegistrationDocumentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Document type name", max_length=100),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of what this document should contain"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        help_text="Document category for organization", max_length=50
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=True, help_text="Whether this document is mandatory"
                    ),
                ),
                (
                    "priority_level",
                    models.CharField(
                        default="medium",
                        help_text="Priority level for review",
                        max_length=20,
                    ),
                ),
                (
                    "file_size_limit_mb",
                    models.IntegerField(
                        default=10, help_text="Maximum file size in MB"
                    ),
                ),
                (
                    "allowed_extensions",
                    models.JSONField(default=list, help_text="Allowed file extensions"),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        default=0, help_text="Order for display in forms"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this document type is currently used",
                    ),
                ),
                (
                    "validation_rules",
                    models.JSONField(
                        default=dict, help_text="Custom validation rules in JSON format"
                    ),
                ),
                (
                    "help_text",
                    models.TextField(blank=True, help_text="Help text to show users"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Registration Document Type",
                "verbose_name_plural": "Registration Document Types",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.AlterField(
            model_name="customuser",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="hospital_customuser_set",
                related_query_name="hospital_customuser",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AlterField(
            model_name="customuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="hospital_customuser_set",
                related_query_name="hospital_customuser",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.CreateModel(
            name="RegistrationDocumentAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_type",
                    models.CharField(
                        choices=[
                            ("view", "View"),
                            ("download", "Download"),
                            ("edit", "Edit"),
                            ("delete", "Delete"),
                            ("admin_review", "Admin Review"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "access_ip",
                    models.GenericIPAddressField(help_text="IP address of accessor"),
                ),
                (
                    "user_agent",
                    models.TextField(help_text="Browser/client information"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "accessed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_logs",
                        to="hospital.registrationdocument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document Access Log",
                "verbose_name_plural": "Document Access Logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="registrationdocument",
            name="document_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="hospital.registrationdocumenttype",
            ),
        ),
        migrations.AddField(
            model_name="registrationdocument",
            name="reviewed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reviewed_documents",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="registrationdocument",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="registration_documents",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="RegistrationDocumentTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="Template name", max_length=100)),
                ("description", models.TextField(help_text="Template description")),
                (
                    "role",
                    models.CharField(
                        help_text="Target role for this template", max_length=50
                    ),
                ),
                (
                    "region",
                    models.CharField(help_text="Geographic region", max_length=20),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0", help_text="Template version", max_length=10
                    ),
                ),
                (
                    "requirements",
                    models.JSONField(
                        default=dict, help_text="Detailed requirements in JSON format"
                    ),
                ),
                (
                    "validation_rules",
                    models.JSONField(
                        default=dict, help_text="Validation rules for this template"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document_types",
                    models.ManyToManyField(
                        help_text="Required document types",
                        to="hospital.registrationdocumenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registration Document Template",
                "verbose_name_plural": "Registration Document Templates",
                "ordering": ["name", "-version"],
                "unique_together": {("name", "version")},
            },
        ),
        migrations.AddIndex(
            model_name="registrationdocument",
            index=models.Index(
                fields=["user", "document_type"], name="hospital_re_user_id_c585a4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="registrationdocument",
            index=models.Index(fields=["status"], name="hospital_re_status_459202_idx"),
        ),
        migrations.AddIndex(
            model_name="registrationdocument",
            index=models.Index(
                fields=["created_at"], name="hospital_re_created_3a3b4c_idx"
            ),
        ),
    ]
