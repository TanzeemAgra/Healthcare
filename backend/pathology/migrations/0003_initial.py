# Generated by Django 5.2.4 on 2025-07-30 07:52

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pathology', '0002_auto_20250724_1650'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PathologyTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('histopathology', 'Histopathology'), ('cytopathology', 'Cytopathology'), ('hematology', 'Hematology'), ('clinical_chemistry', 'Clinical Chemistry'), ('microbiology', 'Microbiology'), ('immunology', 'Immunology'), ('molecular', 'Molecular Pathology'), ('genetic', 'Genetic Testing'), ('forensic', 'Forensic Pathology'), ('autopsy', 'Autopsy')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('specimen_type', models.CharField(max_length=100)),
                ('normal_range', models.TextField(blank=True, help_text='Normal reference values')),
                ('test_methodology', models.CharField(blank=True, max_length=200)),
                ('processing_time_hours', models.PositiveIntegerField(default=24)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('requires_fasting', models.BooleanField(default=False)),
                ('special_instructions', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pathology Test',
                'verbose_name_plural': 'Pathology Tests',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=200)),
                ('medical_record_number', models.CharField(blank=True, max_length=50)),
                ('insurance_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='PathologyDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('location', models.CharField(max_length=200)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('accreditation_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('head_pathologist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_pathology_departments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pathology Department',
                'verbose_name_plural': 'Pathology Departments',
            },
        ),
        migrations.CreateModel(
            name='PathologyOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('collection_date', models.DateTimeField(blank=True, null=True)),
                ('expected_completion', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('collected', 'Specimen Collected'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('stat', 'STAT'), ('critical', 'Critical')], default='routine', max_length=20)),
                ('clinical_history', models.TextField(blank=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_pathology_orders', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathology.pathologydepartment')),
                ('ordering_physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_pathology_tests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pathology Order',
                'verbose_name_plural': 'Pathology Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PathologyOrderTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('collected', 'Specimen Collected'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_pathology_tests', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathology.pathologyorder')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pathology.pathologytest')),
            ],
            options={
                'verbose_name': 'Pathology Order Test',
                'verbose_name_plural': 'Pathology Order Tests',
                'unique_together': {('order', 'test')},
            },
        ),
        migrations.CreateModel(
            name='PathologyQualityControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qc_id', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('qc_type', models.CharField(choices=[('equipment', 'Equipment Check'), ('reagent', 'Reagent Quality'), ('proficiency', 'Proficiency Testing'), ('calibration', 'Calibration'), ('maintenance', 'Maintenance'), ('training', 'Staff Training')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('performed_date', models.DateTimeField()),
                ('equipment_instrument', models.CharField(blank=True, max_length=200)),
                ('results', models.JSONField(default=dict)),
                ('passed', models.BooleanField(default=True)),
                ('corrective_actions', models.TextField(blank=True)),
                ('next_due_date', models.DateTimeField(blank=True, null=True)),
                ('attachments', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Quality Control',
                'verbose_name_plural': 'Quality Controls',
                'ordering': ['-performed_date'],
            },
        ),
        migrations.CreateModel(
            name='PathologyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('gross_description', models.TextField(blank=True, help_text='Macroscopic/Gross examination')),
                ('microscopic_description', models.TextField(blank=True, help_text='Microscopic examination')),
                ('test_results', models.JSONField(default=dict, help_text='Structured test results')),
                ('interpretation', models.TextField(blank=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('staining_methods', models.CharField(blank=True, max_length=500)),
                ('special_studies', models.TextField(blank=True)),
                ('immunohistochemistry', models.TextField(blank=True)),
                ('molecular_findings', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_review', 'Pending Review'), ('reviewed', 'Reviewed'), ('finalized', 'Finalized'), ('amended', 'Amended'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('result_status', models.CharField(choices=[('normal', 'Normal'), ('abnormal', 'Abnormal'), ('critical', 'Critical'), ('inconclusive', 'Inconclusive')], default='normal', max_length=20)),
                ('confidence_level', models.IntegerField(default=5, help_text='Confidence level 1-5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('reported_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('finalized_at', models.DateTimeField(blank=True, null=True)),
                ('technical_notes', models.TextField(blank=True)),
                ('quality_control_notes', models.TextField(blank=True)),
                ('amendments', models.TextField(blank=True)),
                ('digital_slides', models.JSONField(default=list, help_text='Digital slide image paths')),
                ('attachments', models.JSONField(default=list, help_text='Additional file attachments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='pathology.pathologyordertest')),
                ('pathologist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pathology_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pathology Report',
                'verbose_name_plural': 'Pathology Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DigitalSlide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slide_id', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('stain_type', models.CharField(blank=True, max_length=100)),
                ('magnification', models.CharField(blank=True, max_length=50)),
                ('image_path', models.CharField(max_length=500)),
                ('thumbnail_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(default=0)),
                ('resolution', models.CharField(blank=True, max_length=50)),
                ('format', models.CharField(blank=True, max_length=20)),
                ('annotations', models.JSONField(default=list, help_text='Image annotations and markings')),
                ('ai_analysis', models.JSONField(default=dict, help_text='AI-assisted analysis results')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slides', to='pathology.pathologyreport')),
            ],
            options={
                'verbose_name': 'Digital Slide',
                'verbose_name_plural': 'Digital Slides',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='pathologyorder',
            name='tests',
            field=models.ManyToManyField(through='pathology.PathologyOrderTest', to='pathology.pathologytest'),
        ),
        migrations.AddField(
            model_name='pathologyorder',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pathology_orders', to='pathology.patient'),
        ),
        migrations.CreateModel(
            name='Specimen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_id', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('specimen_type', models.CharField(choices=[('blood', 'Blood'), ('urine', 'Urine'), ('tissue', 'Tissue'), ('biopsy', 'Biopsy'), ('cytology', 'Cytology'), ('fluid', 'Body Fluid'), ('swab', 'Swab'), ('stool', 'Stool'), ('sputum', 'Sputum'), ('bone_marrow', 'Bone Marrow'), ('other', 'Other')], max_length=50)),
                ('collection_site', models.CharField(blank=True, max_length=200)),
                ('collection_method', models.CharField(blank=True, max_length=200)),
                ('collection_datetime', models.DateTimeField()),
                ('received_datetime', models.DateTimeField(blank=True, null=True)),
                ('volume_quantity', models.CharField(blank=True, max_length=100)),
                ('container_type', models.CharField(blank=True, max_length=100)),
                ('preservative', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('collected', 'Collected'), ('received', 'Received'), ('processing', 'Processing'), ('processed', 'Processed'), ('stored', 'Stored'), ('discarded', 'Discarded'), ('contaminated', 'Contaminated'), ('insufficient', 'Insufficient')], default='collected', max_length=20)),
                ('storage_location', models.CharField(blank=True, max_length=200)),
                ('storage_temperature', models.CharField(blank=True, max_length=50)),
                ('quality_assessment', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collected_specimens', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specimens', to='pathology.pathologyorder')),
            ],
            options={
                'verbose_name': 'Specimen',
                'verbose_name_plural': 'Specimens',
                'ordering': ['-collection_datetime'],
            },
        ),
        migrations.AddField(
            model_name='pathologyreport',
            name='specimen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='pathology.specimen'),
        ),
    ]
