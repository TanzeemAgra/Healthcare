# Generated by Django 4.2.7 on 2025-08-28 10:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pathology', '0003_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PathologyLaboratory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('laboratory_type', models.CharField(choices=[('clinical', 'Clinical Laboratory'), ('anatomical', 'Anatomical Pathology'), ('molecular', 'Molecular Diagnostics'), ('cytogenetics', 'Cytogenetics'), ('hematology', 'Hematology Lab'), ('microbiology', 'Microbiology Lab'), ('immunology', 'Immunology Lab'), ('research', 'Research Laboratory')], max_length=50)),
                ('license_number', models.CharField(max_length=100, unique=True)),
                ('accreditation_body', models.CharField(blank=True, max_length=100)),
                ('director_name', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('website', models.URLField(blank=True)),
                ('operating_hours', models.CharField(blank=True, max_length=200)),
                ('emergency_contact', models.CharField(blank=True, max_length=200)),
                ('specializations', models.JSONField(default=list, help_text='Laboratory specializations')),
                ('equipment_list', models.JSONField(default=list, help_text='Major equipment and instruments')),
                ('certification_info', models.JSONField(default=dict, help_text='Certification details')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pathology Laboratory',
                'verbose_name_plural': 'Pathology Laboratories',
            },
        ),
        migrations.CreateModel(
            name='PathologyPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('medical_record_number', models.CharField(blank=True, max_length=50)),
                ('insurance_provider', models.CharField(blank=True, max_length=200)),
                ('insurance_number', models.CharField(blank=True, max_length=100)),
                ('referring_physician', models.CharField(blank=True, max_length=200)),
                ('medical_history', models.JSONField(default=list, help_text='Medical history entries')),
                ('allergies', models.JSONField(default=list, help_text='Known allergies')),
                ('medications', models.JSONField(default=list, help_text='Current medications')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to='pathology.pathologylaboratory')),
            ],
            options={
                'verbose_name': 'Pathology Patient',
                'verbose_name_plural': 'Pathology Patients',
            },
        ),
        migrations.CreateModel(
            name='PathologySpecimen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_id', models.CharField(max_length=50, unique=True)),
                ('specimen_type', models.CharField(choices=[('tissue', 'Tissue Biopsy'), ('blood', 'Blood Sample'), ('urine', 'Urine Sample'), ('cytology', 'Cytology Sample'), ('fluid', 'Body Fluid'), ('swab', 'Swab Sample'), ('bone_marrow', 'Bone Marrow'), ('csf', 'Cerebrospinal Fluid'), ('sputum', 'Sputum'), ('stool', 'Stool Sample')], max_length=50)),
                ('collection_date', models.DateTimeField()),
                ('received_date', models.DateTimeField(auto_now_add=True)),
                ('collection_site', models.CharField(blank=True, max_length=200)),
                ('collection_method', models.CharField(blank=True, max_length=200)),
                ('volume_amount', models.CharField(blank=True, max_length=100)),
                ('preservation_method', models.CharField(blank=True, max_length=200)),
                ('storage_location', models.CharField(blank=True, max_length=200)),
                ('storage_temperature', models.CharField(blank=True, max_length=50)),
                ('clinical_info', models.TextField(blank=True)),
                ('special_handling', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('received', 'Received'), ('processing', 'Processing'), ('sectioned', 'Sectioned'), ('stained', 'Stained'), ('reviewed', 'Under Review'), ('completed', 'Completed'), ('archived', 'Archived')], default='received', max_length=20)),
                ('processing_notes', models.TextField(blank=True)),
                ('quality_indicators', models.JSONField(default=dict, help_text='Quality assessment indicators')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specimens', to='pathology.pathologylaboratory')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specimens', to='pathology.pathologypatient')),
            ],
            options={
                'verbose_name': 'Pathology Specimen',
                'verbose_name_plural': 'Pathology Specimens',
            },
        ),
        migrations.CreateModel(
            name='PathologyFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('microscopy', 'Microscopy Images'), ('lab_reports', 'Laboratory Reports'), ('test_results', 'Test Results'), ('pathology_slides', 'Pathology Slides'), ('imaging_studies', 'Imaging Studies'), ('documentation', 'Documentation'), ('quality_control', 'Quality Control'), ('calibration', 'Calibration Records'), ('patient_records', 'Patient Records'), ('regulatory', 'Regulatory Documents')], max_length=50)),
                ('s3_key', models.CharField(max_length=500, unique=True)),
                ('s3_url', models.URLField(max_length=1000)),
                ('size', models.BigIntegerField(default=0, help_text='File size in bytes')),
                ('content_type', models.CharField(blank=True, max_length=200)),
                ('metadata', models.JSONField(default=dict, help_text='Additional file metadata')),
                ('description', models.TextField(blank=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('laboratory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='pathology.pathologylaboratory')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='pathology.pathologypatient')),
                ('specimen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='pathology.pathologyspecimen')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_pathology_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pathology File',
                'verbose_name_plural': 'Pathology Files',
            },
        ),
        migrations.CreateModel(
            name='PathologyAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('cell_morphology', 'Cell Morphology Analysis'), ('cancer_detection', 'Cancer Detection'), ('tissue_classification', 'Tissue Classification'), ('stain_analysis', 'Stain Analysis'), ('cell_counting', 'Cell Counting'), ('abnormality_detection', 'Abnormality Detection'), ('image_enhancement', 'Image Enhancement'), ('quality_assessment', 'Quality Assessment')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('confidence_score', models.FloatField(blank=True, help_text='Analysis confidence score (0-1)', null=True)),
                ('results', models.JSONField(default=dict, help_text='Detailed analysis results')),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('algorithm_version', models.CharField(blank=True, max_length=50)),
                ('parameters_used', models.JSONField(default=dict, help_text='Analysis parameters')),
                ('error_message', models.TextField(blank=True)),
                ('review_notes', models.TextField(blank=True)),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='pathology.pathologyfile')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_pathology_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pathology Analysis',
                'verbose_name_plural': 'Pathology Analyses',
            },
        ),
    ]
