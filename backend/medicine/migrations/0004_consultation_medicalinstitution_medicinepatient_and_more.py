# Generated by Django 4.2.7 on 2025-09-04 06:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("medicine", "0003_auto_20250828_1441"),
    ]

    operations = [
        migrations.CreateModel(
            name="Consultation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "consultation_type",
                    models.CharField(
                        choices=[
                            ("routine", "Routine Check-up"),
                            ("emergency", "Emergency"),
                            ("follow_up", "Follow-up"),
                            ("specialist", "Specialist Consultation"),
                            ("procedure", "Procedure"),
                            ("diagnostic", "Diagnostic"),
                        ],
                        max_length=20,
                    ),
                ),
                ("consultation_date", models.DateTimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=30)),
                ("chief_complaint", models.TextField()),
                ("history_present_illness", models.TextField(blank=True)),
                ("examination_findings", models.TextField(blank=True)),
                ("assessment", models.TextField(blank=True)),
                ("plan", models.TextField(blank=True)),
                (
                    "blood_pressure_systolic",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "blood_pressure_diastolic",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("heart_rate", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "temperature",
                    models.FloatField(
                        blank=True, help_text="Temperature in Celsius", null=True
                    ),
                ),
                (
                    "respiratory_rate",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "oxygen_saturation",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "s3_notes_key",
                    models.CharField(blank=True, default="", max_length=500),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicine_consultations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "medicine_consultations",
                "ordering": ["-consultation_date"],
            },
        ),
        migrations.CreateModel(
            name="MedicalInstitution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("address", models.TextField()),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("website", models.URLField(blank=True)),
                ("license_number", models.CharField(max_length=50, unique=True)),
                ("accreditation", models.CharField(blank=True, max_length=100)),
                (
                    "s3_prefix",
                    models.CharField(editable=False, max_length=100, unique=True),
                ),
                ("storage_quota_gb", models.FloatField(default=1000.0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "medicine_institutions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MedicinePatient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("patient_code", models.CharField(max_length=50)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "blood_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                        ],
                        max_length=3,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("address", models.TextField(blank=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=20),
                ),
                ("allergies", models.TextField(blank=True)),
                ("chronic_conditions", models.TextField(blank=True)),
                ("current_medications", models.TextField(blank=True)),
                ("insurance_provider", models.CharField(blank=True, max_length=100)),
                ("insurance_number", models.CharField(blank=True, max_length=50)),
                (
                    "s3_patient_prefix",
                    models.CharField(editable=False, max_length=200, unique=True),
                ),
                (
                    "height_cm",
                    models.FloatField(blank=True, help_text="Height in cm", null=True),
                ),
                (
                    "weight_kg",
                    models.FloatField(blank=True, help_text="Weight in kg", null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_medicine_patients",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicine_patients",
                        to="medicine.medicalinstitution",
                    ),
                ),
            ],
            options={
                "db_table": "medicine_patients_s3",
                "ordering": ["first_name", "last_name"],
                "unique_together": {("institution", "patient_code")},
            },
        ),
        migrations.CreateModel(
            name="MedicineAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create_institution", "Create Institution"),
                            ("create_patient", "Create Patient"),
                            ("upload_record", "Upload Medical Record"),
                            ("create_consultation", "Create Consultation"),
                            ("create_treatment_plan", "Create Treatment Plan"),
                            ("upload_lab_result", "Upload Lab Result"),
                            ("access_record", "Access Record"),
                            ("delete_record", "Delete Record"),
                        ],
                        max_length=30,
                    ),
                ),
                ("resource_type", models.CharField(max_length=50)),
                ("resource_id", models.CharField(max_length=100)),
                ("user_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("details", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "institution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="medicine.medicalinstitution",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="medicine.medicinepatient",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "medicine_audit_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="LabResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("test_name", models.CharField(max_length=200)),
                (
                    "test_category",
                    models.CharField(
                        choices=[
                            ("blood", "Blood Test"),
                            ("urine", "Urine Test"),
                            ("microbiology", "Microbiology"),
                            ("pathology", "Pathology"),
                            ("chemistry", "Clinical Chemistry"),
                            ("hematology", "Hematology"),
                            ("immunology", "Immunology"),
                            ("toxicology", "Toxicology"),
                        ],
                        max_length=20,
                    ),
                ),
                ("lab_facility", models.CharField(max_length=200)),
                ("ordered_date", models.DateTimeField()),
                ("collection_date", models.DateTimeField(blank=True, null=True)),
                ("result_date", models.DateTimeField(blank=True, null=True)),
                (
                    "s3_result_key",
                    models.CharField(blank=True, default="", max_length=500),
                ),
                ("has_abnormal_values", models.BooleanField(default=False)),
                ("has_critical_values", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ordered", "Ordered"),
                            ("collected", "Sample Collected"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("reviewed", "Reviewed"),
                        ],
                        default="ordered",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "consultation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lab_results",
                        to="medicine.consultation",
                    ),
                ),
                (
                    "ordered_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordered_lab_results",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_results",
                        to="medicine.medicinepatient",
                    ),
                ),
            ],
            options={
                "db_table": "medicine_lab_results",
                "ordering": ["-ordered_date"],
            },
        ),
        migrations.CreateModel(
            name="DoctorWorkspace",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("specializations", models.JSONField(default=list)),
                ("departments", models.JSONField(default=list)),
                (
                    "s3_workspace_prefix",
                    models.CharField(editable=False, max_length=200, unique=True),
                ),
                ("total_consultations", models.PositiveIntegerField(default=0)),
                ("total_patients_treated", models.PositiveIntegerField(default=0)),
                (
                    "total_treatment_plans_created",
                    models.PositiveIntegerField(default=0),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicine_workspace",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_workspaces",
                        to="medicine.medicalinstitution",
                    ),
                ),
            ],
            options={
                "db_table": "medicine_doctor_workspaces",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.AddField(
            model_name="consultation",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="consultations",
                to="medicine.medicinepatient",
            ),
        ),
    ]
