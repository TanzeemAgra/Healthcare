# Generated by Django 4.2.7 on 2025-08-22 09:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('invoice_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'invoices',
            },
        ),
        migrations.CreateModel(
            name='ManualBillingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('doctor_name', models.CharField(max_length=200)),
                ('practice_name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('practice_type', models.CharField(choices=[('individual', 'Individual Practice'), ('small_clinic', 'Small Clinic (2-5 doctors)'), ('medium_practice', 'Medium Practice (6-20 doctors)'), ('large_practice', 'Large Practice (20+ doctors)'), ('hospital', 'Hospital/Health System'), ('diagnostic', 'Diagnostic Center')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Setup'), ('active', 'Active'), ('suspended', 'Suspended'), ('closed', 'Closed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('payment_terms', models.IntegerField(default=30, help_text='Payment terms in days')),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_usage_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'db_table': 'manual_billing_accounts',
            },
        ),
        migrations.CreateModel(
            name='MonthlySubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Activation'), ('active', 'Active'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateTimeField()),
                ('monthly_base_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('monthly_features_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('monthly_total_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_billed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'monthly_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='ServicePricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('patient_management', 'Patient Management'), ('appointment_scheduling', 'Appointment Scheduling'), ('ai_diagnosis', 'AI-Powered Diagnosis'), ('radiology', 'Radiology & Imaging'), ('pathology', 'Pathology & Lab Tests'), ('telemedicine', 'Telemedicine Consultation'), ('ehr_access', 'Electronic Health Records'), ('prescription_management', 'Prescription Management'), ('analytics', 'Analytics & Reporting'), ('ai_chatbot', 'AI Medical Chatbot')], max_length=30, unique=True)),
                ('service_name', models.CharField(max_length=100)),
                ('pricing_model', models.CharField(choices=[('per_patient_month', 'Per Patient Per Month'), ('per_appointment', 'Per Appointment'), ('per_analysis', 'Per Analysis'), ('per_study', 'Per Study'), ('per_test', 'Per Test'), ('per_consultation', 'Per Consultation'), ('per_access', 'Per Access'), ('per_prescription', 'Per Prescription'), ('per_report', 'Per Report'), ('per_query', 'Per Query')], max_length=20)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_description', models.CharField(help_text="e.g., 'per patient/month'", max_length=50)),
                ('volume_threshold_1', models.IntegerField(default=100, help_text='Units for first discount tier')),
                ('volume_discount_1', models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage', max_digits=5)),
                ('volume_threshold_2', models.IntegerField(default=500, help_text='Units for second discount tier')),
                ('volume_discount_2', models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage', max_digits=5)),
                ('volume_threshold_3', models.IntegerField(default=1000, help_text='Units for third discount tier')),
                ('volume_discount_3', models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage', max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'service_pricing',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_code', models.CharField(choices=[('ai_diagnosis', 'AI Diagnosis Module'), ('radiology', 'Radiology Services'), ('lab_management', 'Laboratory Management'), ('telemedicine', 'Telemedicine Suite'), ('appointment_advanced', 'Advanced Scheduling'), ('analytics', 'Advanced Analytics'), ('pathology', 'Pathology Management'), ('billing_advanced', 'Advanced Billing'), ('reporting', 'Custom Reporting'), ('integration', 'Third-party Integrations')], max_length=30, unique=True)),
                ('feature_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('monthly_price', models.DecimalField(decimal_places=2, default=100, max_digits=8)),
                ('icon', models.CharField(default='âš¡', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subscription_features',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(choices=[('base', 'Base Healthcare Platform'), ('starter', 'Starter Practice'), ('professional', 'Professional Practice'), ('enterprise', 'Enterprise Practice'), ('custom', 'Custom Plan')], max_length=20, unique=True)),
                ('plan_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('base_monthly_price', models.DecimalField(decimal_places=2, default=100, max_digits=8)),
                ('included_features', models.JSONField(default=list, help_text='List of included feature codes')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subscription_plans',
            },
        ),
        migrations.CreateModel(
            name='UsageRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, help_text='Additional details about the usage')),
                ('reference_id', models.CharField(blank=True, help_text='External reference (patient ID, appointment ID, etc.)', max_length=100)),
                ('billed', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_records', to='billing.manualbillingaccount')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.invoice')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.servicepricing')),
            ],
            options={
                'db_table': 'usage_records',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('billing_period_start', models.DateTimeField()),
                ('billing_period_end', models.DateTimeField()),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('base_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('features_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='billing.monthlysubscription')),
            ],
            options={
                'db_table': 'subscription_invoices',
            },
        ),
        migrations.AddField(
            model_name='monthlysubscription',
            name='additional_features',
            field=models.ManyToManyField(blank=True, to='billing.subscriptionfeature'),
        ),
        migrations.AddField(
            model_name='monthlysubscription',
            name='billing_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='billing.manualbillingaccount'),
        ),
        migrations.AddField(
            model_name='monthlysubscription',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.subscriptionplan'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='billing.manualbillingaccount'),
        ),
        migrations.CreateModel(
            name='BillingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('practice_name', models.CharField(blank=True, max_length=200)),
                ('practice_type', models.CharField(choices=[('individual', 'Individual Practice'), ('small_clinic', 'Small Clinic (2-5 doctors)'), ('medium_practice', 'Medium Practice (6-20 doctors)'), ('large_practice', 'Large Practice (20+ doctors)'), ('hospital', 'Hospital/Health System'), ('diagnostic', 'Diagnostic Center')], max_length=20)),
                ('expected_usage', models.TextField(help_text='Expected usage details')),
                ('special_requirements', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('in_review', 'Under Review'), ('approved', 'Approved'), ('setup_complete', 'Setup Complete'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewer_notes', models.TextField(blank=True)),
                ('billing_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initial_request', to='billing.manualbillingaccount')),
            ],
            options={
                'db_table': 'billing_requests',
            },
        ),
    ]
