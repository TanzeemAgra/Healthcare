# Generated by Django 4.2.7 on 2025-09-04 06:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("homeopathy", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HomeopathyCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("case_id", models.CharField(max_length=50, unique=True)),
                (
                    "case_type",
                    models.CharField(
                        choices=[
                            ("acute", "Acute Case"),
                            ("chronic", "Chronic Case"),
                            ("constitutional", "Constitutional Treatment"),
                            ("miasmatic", "Miasmatic Treatment"),
                            ("prophylactic", "Prophylactic"),
                            ("follow_up", "Follow-up"),
                        ],
                        max_length=50,
                    ),
                ),
                ("chief_complaint", models.TextField()),
                ("constitutional_type", models.CharField(blank=True, max_length=50)),
                ("miasmatic_analysis", models.TextField(blank=True)),
                ("remedy_prescribed", models.CharField(blank=True, max_length=200)),
                ("potency", models.CharField(blank=True, max_length=20)),
                ("dosage", models.CharField(blank=True, max_length=200)),
                (
                    "modalities",
                    models.JSONField(default=dict, help_text="Better/worse conditions"),
                ),
                (
                    "symptom_totality",
                    models.JSONField(
                        default=list, help_text="Complete symptom picture"
                    ),
                ),
                (
                    "repertorization_data",
                    models.JSONField(
                        default=dict, help_text="Repertorization analysis"
                    ),
                ),
                ("follow_up_notes", models.TextField(blank=True)),
                ("outcome", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("follow_up", "Follow-up"),
                            ("improved", "Improved"),
                            ("cured", "Cured"),
                            ("discontinued", "Discontinued"),
                            ("referred", "Referred"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("next_appointment", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Homeopathy Case",
                "verbose_name_plural": "Homeopathy Cases",
            },
        ),
        migrations.CreateModel(
            name="HomeopathyInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "institution_type",
                    models.CharField(
                        choices=[
                            ("clinic", "Homeopathy Clinic"),
                            ("hospital", "Homeopathy Hospital"),
                            ("college", "Homeopathy College"),
                            ("research_center", "Research Center"),
                            ("pharmacy", "Homeopathy Pharmacy"),
                            ("manufacturing", "Remedy Manufacturing"),
                            ("dispensary", "Dispensary"),
                            ("wellness_center", "Wellness Center"),
                        ],
                        max_length=50,
                    ),
                ),
                ("license_number", models.CharField(max_length=100, unique=True)),
                ("accreditation_body", models.CharField(blank=True, max_length=100)),
                ("chief_homeopath", models.CharField(max_length=200)),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.TextField()),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("zip_code", models.CharField(max_length=20)),
                ("country", models.CharField(default="United States", max_length=100)),
                ("website", models.URLField(blank=True)),
                ("operating_hours", models.CharField(blank=True, max_length=200)),
                ("emergency_contact", models.CharField(blank=True, max_length=200)),
                (
                    "specializations",
                    models.JSONField(
                        default=list, help_text="Institution specializations"
                    ),
                ),
                (
                    "equipment_list",
                    models.JSONField(
                        default=list, help_text="Equipment and tools available"
                    ),
                ),
                (
                    "certification_info",
                    models.JSONField(default=dict, help_text="Certification details"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Homeopathy Institution",
                "verbose_name_plural": "Homeopathy Institutions",
            },
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="address",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="city",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="constitution_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("carbonica", "Calcarea Carbonica"),
                    ("phosphorus", "Phosphorus"),
                    ("sulphur", "Sulphur"),
                    ("lycopodium", "Lycopodium"),
                    ("natrum_mur", "Natrum Muriaticum"),
                    ("sepia", "Sepia"),
                    ("pulsatilla", "Pulsatilla"),
                    ("arsenicum", "Arsenicum Album"),
                    ("carbonic", "Carbonic (Calcium)"),
                    ("phosphoric", "Phosphoric (Phosphorus)"),
                    ("fluoric", "Fluoric (Fluorine)"),
                    ("sulphuric", "Sulphuric (Sulphur)"),
                    ("natrum", "Natrum (Sodium)"),
                    ("silica", "Silica"),
                    ("iron", "Iron"),
                    ("magnesium", "Magnesium"),
                ],
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="constitutional_symptoms",
            field=models.JSONField(
                default=list, help_text="Constitutional symptom patterns"
            ),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="date_of_birth",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="emergency_contact_name",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="emergency_contact_phone",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="family_history",
            field=models.JSONField(default=list, help_text="Family medical history"),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="first_name",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="insurance_number",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="insurance_provider",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="last_name",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="lifestyle_factors",
            field=models.JSONField(
                default=dict, help_text="Lifestyle and environmental factors"
            ),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="medical_history",
            field=models.JSONField(default=list, help_text="Medical history entries"),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="medical_record_number",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="miasmatic_background",
            field=models.CharField(
                blank=True,
                choices=[
                    ("psoric", "Psoric"),
                    ("sycotic", "Sycotic"),
                    ("syphilitic", "Syphilitic"),
                    ("tubercular", "Tubercular"),
                    ("cancerous", "Cancerous"),
                    ("mixed", "Mixed Miasma"),
                ],
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="patient_id",
            field=models.CharField(blank=True, max_length=50, unique=True),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="referring_practitioner",
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="state",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="zip_code",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterField(
            model_name="homeopathypatient",
            name="constitution",
            field=models.CharField(
                blank=True,
                choices=[
                    ("carbonica", "Calcarea Carbonica"),
                    ("phosphorus", "Phosphorus"),
                    ("sulphur", "Sulphur"),
                    ("lycopodium", "Lycopodium"),
                    ("natrum_mur", "Natrum Muriaticum"),
                    ("sepia", "Sepia"),
                    ("pulsatilla", "Pulsatilla"),
                    ("arsenicum", "Arsenicum Album"),
                    ("carbonic", "Carbonic (Calcium)"),
                    ("phosphoric", "Phosphoric (Phosphorus)"),
                    ("fluoric", "Fluoric (Fluorine)"),
                    ("sulphuric", "Sulphuric (Sulphur)"),
                    ("natrum", "Natrum (Sodium)"),
                    ("silica", "Silica"),
                    ("iron", "Iron"),
                    ("magnesium", "Magnesium"),
                ],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="HomeopathyFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("case_taking", "Case Taking Records"),
                            ("constitutional_analysis", "Constitutional Analysis"),
                            ("remedy_prescriptions", "Remedy Prescriptions"),
                            ("follow_up_notes", "Follow-up Notes"),
                            ("miasmatic_analysis", "Miasmatic Analysis"),
                            ("repertorization", "Repertorization Charts"),
                            ("materia_medica", "Materia Medica References"),
                            ("provings", "Proving Documentation"),
                            ("lab_reports", "Laboratory Reports"),
                            ("lifestyle_assessment", "Lifestyle Assessment"),
                        ],
                        max_length=50,
                    ),
                ),
                ("s3_key", models.CharField(max_length=500, unique=True)),
                ("s3_url", models.URLField(max_length=1000)),
                (
                    "size",
                    models.BigIntegerField(default=0, help_text="File size in bytes"),
                ),
                ("content_type", models.CharField(blank=True, max_length=200)),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional file metadata"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="homeopathy.homeopathycase",
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="homeopathy.homeopathyinstitution",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="homeopathy.homeopathypatient",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_homeopathy_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Homeopathy File",
                "verbose_name_plural": "Homeopathy Files",
            },
        ),
        migrations.AddField(
            model_name="homeopathycase",
            name="institution",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cases",
                to="homeopathy.homeopathyinstitution",
            ),
        ),
        migrations.AddField(
            model_name="homeopathycase",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cases",
                to="homeopathy.homeopathypatient",
            ),
        ),
        migrations.AddField(
            model_name="homeopathycase",
            name="practitioner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="homeopathy_cases",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="HomeopathyAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("constitutional_matching", "Constitutional Type Matching"),
                            ("remedy_selection", "Remedy Selection Assistant"),
                            ("symptom_analysis", "Symptom Pattern Analysis"),
                            ("miasmatic_assessment", "Miasmatic Background Assessment"),
                            ("potency_suggestion", "Potency Selection Guide"),
                            ("repertorization_aid", "Digital Repertorization"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        blank=True,
                        help_text="Analysis confidence score (0-1)",
                        null=True,
                    ),
                ),
                (
                    "results",
                    models.JSONField(
                        default=dict, help_text="Detailed analysis results"
                    ),
                ),
                ("processing_time", models.DurationField(blank=True, null=True)),
                ("algorithm_version", models.CharField(blank=True, max_length=50)),
                (
                    "parameters_used",
                    models.JSONField(default=dict, help_text="Analysis parameters"),
                ),
                ("error_message", models.TextField(blank=True)),
                ("review_notes", models.TextField(blank=True)),
                ("is_validated", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyses",
                        to="homeopathy.homeopathyfile",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_homeopathy_analyses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Homeopathy Analysis",
                "verbose_name_plural": "Homeopathy Analyses",
            },
        ),
        migrations.AddField(
            model_name="homeopathypatient",
            name="institution",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="patients",
                to="homeopathy.homeopathyinstitution",
            ),
        ),
    ]
