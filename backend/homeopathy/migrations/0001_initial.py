# Generated by Django 4.2.7 on 2025-08-14 15:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HomeopathyRemedy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('latin_name', models.CharField(blank=True, max_length=150)),
                ('common_name', models.CharField(blank=True, max_length=150)),
                ('keynotes', models.JSONField(default=list, help_text='List of key symptoms/characteristics')),
                ('mental_symptoms', models.JSONField(default=list, help_text='Mental and emotional symptoms')),
                ('physical_symptoms', models.JSONField(default=list, help_text='Physical symptoms and modalities')),
                ('indications', models.JSONField(default=list, help_text='Main therapeutic indications')),
                ('miasm', models.CharField(choices=[('psoric', 'Psoric'), ('sycotic', 'Sycotic'), ('syphilitic', 'Syphilitic'), ('tubercular', 'Tubercular'), ('acute', 'Acute')], max_length=20)),
                ('constitution_affinity', models.JSONField(default=list, help_text='Constitutional types it suits')),
                ('common_potencies', models.CharField(default='6C, 30C, 200C', max_length=100)),
                ('dosage_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('antidotes', models.ManyToManyField(blank=True, related_name='antidoted_by', to='homeopathy.homeopathyremedy')),
                ('complementary', models.ManyToManyField(blank=True, to='homeopathy.homeopathyremedy')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HomeopathyPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('age', models.PositiveIntegerField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('constitution', models.CharField(blank=True, choices=[('carbonic', 'Carbonic (Calcium)'), ('phosphoric', 'Phosphoric (Phosphorus)'), ('fluoric', 'Fluoric (Fluorine)'), ('sulphuric', 'Sulphuric (Sulphur)'), ('natrum', 'Natrum (Sodium)'), ('silica', 'Silica'), ('iron', 'Iron'), ('magnesium', 'Magnesium')], max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HomeopathyDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_symptoms', models.TextField()),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('onset', models.CharField(blank=True, max_length=100)),
                ('severity', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('mental_state', models.TextField(blank=True)),
                ('emotional_pattern', models.TextField(blank=True)),
                ('fears', models.TextField(blank=True)),
                ('anxieties', models.TextField(blank=True)),
                ('mood', models.CharField(blank=True, max_length=100)),
                ('appetite', models.CharField(blank=True, max_length=200)),
                ('thirst', models.CharField(blank=True, max_length=200)),
                ('sleep', models.CharField(blank=True, max_length=200)),
                ('dreams', models.CharField(blank=True, max_length=200)),
                ('thermals', models.CharField(blank=True, max_length=200)),
                ('perspiration', models.CharField(blank=True, max_length=200)),
                ('better_by', models.TextField(blank=True, help_text='What makes symptoms better')),
                ('worse_by', models.TextField(blank=True, help_text='What makes symptoms worse')),
                ('time_aggravation', models.CharField(blank=True, max_length=100)),
                ('energy', models.CharField(blank=True, max_length=200)),
                ('circulation', models.CharField(blank=True, max_length=200)),
                ('digestion', models.CharField(blank=True, max_length=200)),
                ('elimination', models.CharField(blank=True, max_length=200)),
                ('miasm', models.CharField(blank=True, choices=[('psoric', 'Psoric'), ('sycotic', 'Sycotic'), ('syphilitic', 'Syphilitic'), ('tubercular', 'Tubercular'), ('acute', 'Acute')], max_length=20)),
                ('family_history', models.TextField(blank=True)),
                ('past_illness', models.TextField(blank=True)),
                ('lifestyle', models.TextField(blank=True)),
                ('environment', models.TextField(blank=True)),
                ('stress_factors', models.TextField(blank=True)),
                ('previous_treatments', models.TextField(blank=True)),
                ('ai_confidence', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('suggested_constitution', models.CharField(blank=True, max_length=50)),
                ('suggested_miasm', models.CharField(blank=True, max_length=20)),
                ('mental_emotional_score', models.IntegerField(default=0)),
                ('physical_score', models.IntegerField(default=0)),
                ('modality_score', models.IntegerField(default=0)),
                ('estimated_duration', models.CharField(blank=True, max_length=50)),
                ('suggested_potency', models.CharField(blank=True, max_length=50)),
                ('suggested_frequency', models.CharField(blank=True, max_length=100)),
                ('follow_up_recommendations', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('pending', 'Pending Analysis'), ('analyzing', 'AI Analysis in Progress'), ('completed', 'Analysis Completed'), ('reviewed', 'Reviewed by Practitioner'), ('prescribed', 'Remedy Prescribed')], default='pending', max_length=20)),
                ('analyzed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='homeopathy.homeopathypatient')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HomeopathyRemedySuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('keynote_match_score', models.FloatField(default=0.0)),
                ('mental_match_score', models.FloatField(default=0.0)),
                ('physical_match_score', models.FloatField(default=0.0)),
                ('constitutional_match_score', models.FloatField(default=0.0)),
                ('suggested_potency', models.CharField(default='30C', max_length=20)),
                ('suggested_frequency', models.CharField(default='Once daily', max_length=100)),
                ('duration', models.CharField(default='3-5 days', max_length=50)),
                ('ai_reasoning', models.TextField(blank=True, help_text='AI explanation for this suggestion')),
                ('matching_symptoms', models.JSONField(default=list, help_text='Symptoms that matched this remedy')),
                ('rank', models.PositiveIntegerField(help_text='Rank in the suggestion list (1=top)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remedy_suggestions', to='homeopathy.homeopathydiagnosis')),
                ('remedy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeopathy.homeopathyremedy')),
            ],
            options={
                'ordering': ['rank'],
                'unique_together': {('diagnosis', 'rank')},
            },
        ),
    ]
