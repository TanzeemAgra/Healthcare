# Generated by Django 5.2.4 on 2025-08-05 08:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.CharField(max_length=20, unique=True)),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('appointment_type', models.CharField(choices=[('consultation', 'Consultation'), ('follow_up', 'Follow-up'), ('emergency', 'Emergency'), ('routine_checkup', 'Routine Checkup'), ('specialist', 'Specialist Visit'), ('procedure', 'Procedure'), ('lab_work', 'Lab Work'), ('imaging', 'Imaging'), ('telemedicine', 'Telemedicine')], default='consultation', max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('chief_complaint', models.TextField(help_text='Primary reason for visit')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the appointment', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_appointments_as_doctor', to=settings.AUTH_USER_MODEL)),
                ('scheduled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_appointments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(help_text='Unique patient identifier', max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1)),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('Unknown', 'Unknown')], default='Unknown', max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('separated', 'Separated')], max_length=20, null=True)),
                ('occupation', models.CharField(blank=True, max_length=200, null=True)),
                ('emergency_contact_name', models.CharField(max_length=200)),
                ('emergency_contact_relationship', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('insurance_provider', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('primary_physician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(max_length=200)),
                ('diagnosis_date', models.DateField()),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('critical', 'Critical')], default='mild', max_length=20)),
                ('is_chronic', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnosed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to='patients.patient')),
            ],
            options={
                'verbose_name_plural': 'Medical Histories',
                'ordering': ['-diagnosis_date'],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=200)),
                ('test_code', models.CharField(blank=True, max_length=50, null=True)),
                ('test_category', models.CharField(blank=True, max_length=100, null=True)),
                ('ordered_date', models.DateTimeField()),
                ('collected_date', models.DateTimeField(blank=True, null=True)),
                ('result_date', models.DateTimeField(blank=True, null=True)),
                ('result_value', models.CharField(blank=True, max_length=200, null=True)),
                ('reference_range', models.CharField(blank=True, max_length=200, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('result_status', models.CharField(choices=[('normal', 'Normal'), ('abnormal', 'Abnormal'), ('critical', 'Critical'), ('pending_review', 'Pending Review')], default='pending_review', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('report_file', models.FileField(blank=True, null=True, upload_to='lab_reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='patients.appointment')),
                ('ordered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordered_labs', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_labs', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='patients.patient')),
            ],
            options={
                'ordering': ['-ordered_date'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='patients.patient'),
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systolic_bp', models.PositiveIntegerField(blank=True, help_text='Systolic blood pressure (mmHg)', null=True)),
                ('diastolic_bp', models.PositiveIntegerField(blank=True, help_text='Diastolic blood pressure (mmHg)', null=True)),
                ('heart_rate', models.PositiveIntegerField(blank=True, help_text='Heart rate (BPM)', null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, help_text='Respiratory rate (breaths per minute)', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Temperature (°F)', max_digits=4, null=True)),
                ('oxygen_saturation', models.PositiveIntegerField(blank=True, help_text='Oxygen saturation (%)', null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight (lbs)', max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height (inches)', max_digits=5, null=True)),
                ('measured_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='patients.appointment')),
                ('measured_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measured_vital_signs', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='patients.patient')),
            ],
            options={
                'verbose_name_plural': 'Vital Signs',
                'ordering': ['-measured_at'],
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['patient_id'], name='patients_pa_patient_927c52_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['last_name', 'first_name'], name='patients_pa_last_na_1b32a7_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['date_of_birth'], name='patients_pa_date_of_4302f5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('doctor', 'appointment_date', 'appointment_time')},
        ),
    ]
