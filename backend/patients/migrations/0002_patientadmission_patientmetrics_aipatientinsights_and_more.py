# Generated by Django 4.2.7 on 2025-08-22 11:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientAdmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('admission_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('admission_type', models.CharField(choices=[('emergency', 'Emergency'), ('elective', 'Elective'), ('outpatient', 'Outpatient'), ('observation', 'Observation'), ('transfer', 'Transfer')], max_length=20)),
                ('department', models.CharField(max_length=100)),
                ('room_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bed_number', models.CharField(blank=True, max_length=20, null=True)),
                ('chief_complaint', models.TextField()),
                ('initial_diagnosis', models.TextField(blank=True, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('current_medications', models.TextField(blank=True, null=True)),
                ('current_status', models.CharField(choices=[('admitted', 'Admitted'), ('in_treatment', 'In Treatment'), ('stable', 'Stable'), ('critical', 'Critical'), ('recovery', 'Recovery'), ('discharge_ready', 'Discharge Ready'), ('discharged', 'Discharged')], default='admitted', max_length=20)),
                ('priority_level', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('insurance_provider', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=100, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discharge_date', models.DateTimeField(blank=True, null=True)),
                ('discharge_diagnosis', models.TextField(blank=True, null=True)),
                ('discharge_instructions', models.TextField(blank=True, null=True)),
                ('discharge_medications', models.TextField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('ai_risk_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('ai_predictions', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('attending_physician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_admissions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_admissions', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admissions', to='patients.patient')),
            ],
            options={
                'ordering': ['-admission_date'],
            },
        ),
        migrations.CreateModel(
            name='PatientMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_to_triage_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('triage_to_doctor_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('door_to_doctor_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('diagnosis_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('treatment_start_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('vital_signs_frequency', models.PositiveIntegerField(default=0)),
                ('medication_adherence_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('pain_scores', models.JSONField(default=list)),
                ('hospital_acquired_infections', models.BooleanField(default=False)),
                ('medication_errors', models.PositiveIntegerField(default=0)),
                ('falls_incidents', models.PositiveIntegerField(default=0)),
                ('pressure_ulcers', models.BooleanField(default=False)),
                ('satisfaction_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('complaints_filed', models.PositiveIntegerField(default=0)),
                ('compliments_received', models.PositiveIntegerField(default=0)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('insurance_coverage_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('patient_responsibility', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('readmission_30_days', models.BooleanField(default=False)),
                ('complications_occurred', models.BooleanField(default=False)),
                ('treatment_successful', models.BooleanField(default=True)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('admission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='patients.patientadmission')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='patients.patient')),
            ],
            options={
                'ordering': ['-calculated_at'],
            },
        ),
        migrations.CreateModel(
            name='AIPatientInsights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('risk_assessment', 'Risk Assessment'), ('length_of_stay', 'Length of Stay Prediction'), ('readmission_risk', 'Readmission Risk'), ('complication_risk', 'Complication Risk'), ('treatment_recommendation', 'Treatment Recommendation'), ('discharge_planning', 'Discharge Planning'), ('cost_prediction', 'Cost Prediction')], max_length=30)),
                ('confidence_level', models.CharField(choices=[('low', 'Low (< 70%)'), ('medium', 'Medium (70-85%)'), ('high', 'High (85-95%)'), ('very_high', 'Very High (> 95%)')], max_length=20)),
                ('prediction_data', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(default=list)),
                ('risk_factors', models.JSONField(default=list)),
                ('risk_score', models.FloatField(help_text='Risk score from 0 (low) to 10 (high)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('accuracy_score', models.FloatField(help_text='Model accuracy score from 0 to 1', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('model_version', models.CharField(default='v1.0', max_length=50)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_validated', models.BooleanField(default=False)),
                ('validation_notes', models.TextField(blank=True, null=True)),
                ('admission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='patients.patientadmission')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='patients.patient')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('report_type', models.CharField(choices=[('admission', 'Admission Report'), ('clinical_summary', 'Clinical Summary'), ('discharge_summary', 'Discharge Summary'), ('ai_analysis', 'AI Analysis Report'), ('comprehensive', 'Comprehensive Report'), ('billing', 'Billing Report'), ('quality_metrics', 'Quality Metrics Report')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('content', models.JSONField(default=dict)),
                ('summary', models.TextField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_format', models.CharField(default='PDF', max_length=10)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('completed', 'Completed'), ('error', 'Error')], default='generating', max_length=20)),
                ('is_confidential', models.BooleanField(default=True)),
                ('access_log', models.JSONField(default=list)),
                ('admission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='patients.patientadmission')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='patients.patient')),
            ],
            options={
                'ordering': ['-generated_at'],
                'indexes': [models.Index(fields=['report_id'], name='patients_pa_report__3488b8_idx'), models.Index(fields=['admission', 'report_type'], name='patients_pa_admissi_a1808c_idx'), models.Index(fields=['patient', 'report_type'], name='patients_pa_patient_5cb1c4_idx')],
            },
        ),
        migrations.CreateModel(
            name='PatientJourney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('registration', 'Registration'), ('admission', 'Admission'), ('triage', 'Triage'), ('initial_assessment', 'Initial Assessment'), ('diagnosis', 'Diagnosis'), ('testing', 'Testing/Procedures'), ('treatment', 'Treatment'), ('monitoring', 'Monitoring'), ('consultation', 'Consultation'), ('surgery', 'Surgery'), ('recovery', 'Recovery'), ('discharge_planning', 'Discharge Planning'), ('discharge', 'Discharge')], max_length=30)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.CharField(max_length=200)),
                ('action_taken', models.CharField(max_length=500)),
                ('vital_signs', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('wait_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journey_events', to='patients.patientadmission')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journey_events', to='patients.patient')),
                ('staff_member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journey_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
                'indexes': [models.Index(fields=['admission', 'timestamp'], name='patients_pa_admissi_031e62_idx'), models.Index(fields=['patient', 'timestamp'], name='patients_pa_patient_196cee_idx'), models.Index(fields=['stage'], name='patients_pa_stage_46d6ca_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['admission_id'], name='patients_pa_admissi_7ffa07_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['patient', 'admission_date'], name='patients_pa_patient_e8d6e1_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['current_status'], name='patients_pa_current_ba7b63_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['priority_level'], name='patients_pa_priorit_82f941_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['department'], name='patients_pa_departm_11dd34_idx'),
        ),
        migrations.AddIndex(
            model_name='aipatientinsights',
            index=models.Index(fields=['admission', 'insight_type'], name='patients_ai_admissi_5fa5bf_idx'),
        ),
        migrations.AddIndex(
            model_name='aipatientinsights',
            index=models.Index(fields=['patient', 'insight_type'], name='patients_ai_patient_050922_idx'),
        ),
        migrations.AddIndex(
            model_name='aipatientinsights',
            index=models.Index(fields=['risk_score'], name='patients_ai_risk_sc_9c4ded_idx'),
        ),
    ]
