# Generated by Django 5.2.4 on 2025-07-30 07:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dermatology', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DermatologyDepartment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('operating_hours', models.CharField(blank=True, max_length=200)),
                ('emergency_services', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('head_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='head_dermatology_departments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dermatology Department',
                'verbose_name_plural': 'Dermatology Departments',
                'db_table': 'dermatology_departments',
            },
        ),
        migrations.CreateModel(
            name='DermatologyConsultation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_number', models.CharField(max_length=50, unique=True)),
                ('consultation_type', models.CharField(choices=[('initial', 'Initial Consultation'), ('follow_up', 'Follow-up'), ('screening', 'Skin Cancer Screening'), ('cosmetic', 'Cosmetic Consultation'), ('emergency', 'Emergency'), ('second_opinion', 'Second Opinion')], max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent'), ('emergent', 'Emergent')], default='normal', max_length=20)),
                ('chief_complaint', models.TextField()),
                ('history_of_present_illness', models.TextField(blank=True)),
                ('review_of_systems', models.TextField(blank=True)),
                ('physical_examination', models.TextField(blank=True)),
                ('assessment', models.TextField(blank=True)),
                ('plan', models.TextField(blank=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('next_appointment_recommended', models.DateTimeField(blank=True, null=True)),
                ('consultation_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_dermatology_consultations', to=settings.AUTH_USER_MODEL)),
                ('dermatologist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dermatology_consultations', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='dermatology.dermatologydepartment')),
            ],
            options={
                'verbose_name': 'Dermatology Consultation',
                'verbose_name_plural': 'Dermatology Consultations',
                'db_table': 'dermatology_consultations',
            },
        ),
        migrations.CreateModel(
            name='DiagnosticProcedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('procedure_number', models.CharField(max_length=50, unique=True)),
                ('procedure_type', models.CharField(choices=[('biopsy', 'Skin Biopsy'), ('dermoscopy', 'Dermoscopy'), ('patch_test', 'Patch Testing'), ('wood_lamp', "Wood's Lamp Examination"), ('koh_prep', 'KOH Preparation'), ('tzanck_smear', 'Tzanck Smear'), ('bacterial_culture', 'Bacterial Culture'), ('fungal_culture', 'Fungal Culture'), ('viral_culture', 'Viral Culture'), ('immunofluorescence', 'Direct Immunofluorescence'), ('confocal_microscopy', 'Confocal Microscopy'), ('optical_coherence_tomography', 'Optical Coherence Tomography'), ('phototesting', 'Phototesting'), ('other', 'Other')], max_length=30)),
                ('procedure_name', models.CharField(max_length=200)),
                ('indication', models.TextField()),
                ('anatomical_location', models.CharField(max_length=200)),
                ('procedure_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('ordered', 'Ordered'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='ordered', max_length=20)),
                ('procedure_details', models.TextField(blank=True)),
                ('findings', models.TextField(blank=True)),
                ('complications', models.TextField(blank=True)),
                ('post_procedure_care', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic_procedures', to='dermatology.dermatologyconsultation')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performed_dermatology_procedures', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Diagnostic Procedure',
                'verbose_name_plural': 'Diagnostic Procedures',
                'db_table': 'dermatology_diagnostic_procedures',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('medical_record_number', models.CharField(max_length=50, unique=True)),
                ('skin_type', models.CharField(blank=True, choices=[('type_1', 'Type I - Always burns, never tans'), ('type_2', 'Type II - Usually burns, tans poorly'), ('type_3', 'Type III - Sometimes burns, tans gradually'), ('type_4', 'Type IV - Burns minimally, always tans well'), ('type_5', 'Type V - Very rarely burns, tans very easily'), ('type_6', 'Type VI - Never burns')], max_length=20)),
                ('family_history', models.TextField(blank=True)),
                ('known_allergies', models.TextField(blank=True)),
                ('current_medications', models.TextField(blank=True)),
                ('sun_exposure_history', models.TextField(blank=True)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('smoking_status', models.BooleanField(default=False)),
                ('alcohol_consumption', models.CharField(blank=True, max_length=100)),
                ('previous_skin_cancer', models.BooleanField(default=False)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('insurance_provider', models.CharField(blank=True, max_length=100)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dermatology_patient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dermatology Patient',
                'verbose_name_plural': 'Dermatology Patients',
                'db_table': 'dermatology_patients',
            },
        ),
        migrations.AddField(
            model_name='dermatologyconsultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dermatology_consultations', to='dermatology.patient'),
        ),
        migrations.CreateModel(
            name='SkinCondition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('icd10_code', models.CharField(blank=True, max_length=20)),
                ('category', models.CharField(choices=[('inflammatory', 'Inflammatory'), ('infectious', 'Infectious'), ('neoplastic', 'Neoplastic'), ('genetic', 'Genetic'), ('autoimmune', 'Autoimmune'), ('allergic', 'Allergic'), ('cosmetic', 'Cosmetic'), ('other', 'Other')], max_length=20)),
                ('severity_level', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('critical', 'Critical')], max_length=20)),
                ('description', models.TextField()),
                ('symptoms', models.TextField(blank=True)),
                ('risk_factors', models.TextField(blank=True)),
                ('treatment_guidelines', models.TextField(blank=True)),
                ('is_contagious', models.BooleanField(default=False)),
                ('requires_biopsy', models.BooleanField(default=False)),
                ('typical_duration', models.CharField(blank=True, max_length=100)),
                ('recurrence_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Skin Condition',
                'verbose_name_plural': 'Skin Conditions',
                'db_table': 'skin_conditions',
                'unique_together': {('name', 'icd10_code')},
            },
        ),
        migrations.CreateModel(
            name='SkinPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo_type', models.CharField(choices=[('clinical', 'Clinical Documentation'), ('dermoscopy', 'Dermoscopy Image'), ('before_treatment', 'Before Treatment'), ('after_treatment', 'After Treatment'), ('progression', 'Disease Progression'), ('wound_care', 'Wound Care Documentation'), ('surgical', 'Surgical Documentation'), ('teaching', 'Teaching/Educational'), ('research', 'Research')], max_length=20)),
                ('anatomical_region', models.CharField(choices=[('face', 'Face'), ('scalp', 'Scalp'), ('neck', 'Neck'), ('chest', 'Chest'), ('back', 'Back'), ('abdomen', 'Abdomen'), ('arms', 'Arms'), ('hands', 'Hands'), ('legs', 'Legs'), ('feet', 'Feet'), ('genitalia', 'Genitalia'), ('full_body', 'Full Body'), ('other', 'Other')], max_length=20)),
                ('specific_location', models.CharField(blank=True, max_length=200)),
                ('image_file', models.ImageField(upload_to='dermatology/photos/%Y/%m/%d/')),
                ('thumbnail', models.ImageField(blank=True, upload_to='dermatology/thumbnails/%Y/%m/%d/')),
                ('description', models.TextField(blank=True)),
                ('magnification', models.CharField(blank=True, max_length=50)),
                ('lighting_conditions', models.CharField(blank=True, max_length=100)),
                ('camera_settings', models.JSONField(blank=True, default=dict)),
                ('taken_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_before_treatment', models.BooleanField(default=False)),
                ('is_after_treatment', models.BooleanField(default=False)),
                ('treatment_day', models.IntegerField(blank=True, null=True)),
                ('consent_obtained', models.BooleanField(default=False)),
                ('research_use_permitted', models.BooleanField(default=False)),
                ('teaching_use_permitted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skin_photos', to='dermatology.dermatologyconsultation')),
                ('taken_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_dermatology_photos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Skin Photo',
                'verbose_name_plural': 'Skin Photos',
                'db_table': 'dermatology_skin_photos',
            },
        ),
        migrations.CreateModel(
            name='AIAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(choices=[('lesion_detection', 'Lesion Detection'), ('cancer_screening', 'Cancer Screening'), ('acne_assessment', 'Acne Assessment'), ('pigmentation_analysis', 'Pigmentation Analysis'), ('wrinkle_analysis', 'Wrinkle Analysis'), ('texture_analysis', 'Skin Texture Analysis'), ('comparative_analysis', 'Comparative Analysis'), ('treatment_prediction', 'Treatment Prediction')], max_length=30)),
                ('ai_model_version', models.CharField(max_length=50)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('confidence_level', models.CharField(choices=[('very_low', 'Very Low (0-20%)'), ('low', 'Low (21-40%)'), ('moderate', 'Moderate (41-60%)'), ('high', 'High (61-80%)'), ('very_high', 'Very High (81-100%)')], max_length=20)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('primary_findings', models.JSONField(default=dict)),
                ('secondary_findings', models.JSONField(blank=True, default=dict)),
                ('risk_assessment', models.TextField(blank=True)),
                ('recommended_actions', models.TextField(blank=True)),
                ('differential_diagnosis', models.JSONField(blank=True, default=list)),
                ('feature_analysis', models.JSONField(blank=True, default=dict)),
                ('lesion_measurements', models.JSONField(blank=True, default=dict)),
                ('color_analysis', models.JSONField(blank=True, default=dict)),
                ('texture_metrics', models.JSONField(blank=True, default=dict)),
                ('asymmetry_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('border_irregularity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('color_variation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('diameter_mm', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('evolution_detected', models.BooleanField(default=False)),
                ('requires_biopsy', models.BooleanField(default=False)),
                ('urgency_level', models.CharField(default='routine', max_length=20)),
                ('validated_by_doctor', models.BooleanField(default=False)),
                ('doctor_agreement', models.BooleanField(blank=True, null=True)),
                ('doctor_notes', models.TextField(blank=True)),
                ('processing_time_seconds', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('skin_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_analyses', to='dermatology.skinphoto')),
            ],
            options={
                'verbose_name': 'AI Analysis',
                'verbose_name_plural': 'AI Analyses',
                'db_table': 'dermatology_ai_analyses',
            },
        ),
        migrations.CreateModel(
            name='TreatmentPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('treatment_category', models.CharField(choices=[('topical', 'Topical Therapy'), ('systemic', 'Systemic Therapy'), ('surgical', 'Surgical Intervention'), ('laser', 'Laser Therapy'), ('phototherapy', 'Phototherapy'), ('cryotherapy', 'Cryotherapy'), ('immunotherapy', 'Immunotherapy'), ('lifestyle', 'Lifestyle Modifications'), ('follow_up', 'Follow-up Care'), ('preventive', 'Preventive Measures')], max_length=20)),
                ('treatment_name', models.CharField(max_length=200)),
                ('treatment_description', models.TextField()),
                ('medication_name', models.CharField(blank=True, max_length=200)),
                ('dosage', models.CharField(blank=True, max_length=100)),
                ('frequency', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('application_instructions', models.TextField(blank=True)),
                ('precautions', models.TextField(blank=True)),
                ('expected_outcomes', models.TextField(blank=True)),
                ('potential_side_effects', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('expected_end_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('discontinued', 'Discontinued'), ('modified', 'Modified')], default='planned', max_length=20)),
                ('effectiveness_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('patient_compliance', models.CharField(blank=True, max_length=100)),
                ('treatment_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='dermatology.dermatologyconsultation')),
                ('diagnosed_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='dermatology.skincondition')),
                ('prescribed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescribed_dermatology_treatments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Treatment Plan',
                'verbose_name_plural': 'Treatment Plans',
                'db_table': 'dermatology_treatment_plans',
            },
        ),
        migrations.CreateModel(
            name='TreatmentOutcome',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assessment_date', models.DateField()),
                ('outcome_status', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('no_response', 'No Response'), ('adverse_reaction', 'Adverse Reaction')], max_length=20)),
                ('improvement_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('symptom_severity_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('patient_satisfaction', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('side_effects_reported', models.TextField(blank=True)),
                ('quality_of_life_impact', models.TextField(blank=True)),
                ('objective_measurements', models.JSONField(blank=True, default=dict)),
                ('clinical_notes', models.TextField()),
                ('next_assessment_date', models.DateField(blank=True, null=True)),
                ('treatment_modifications', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessed_dermatology_outcomes', to=settings.AUTH_USER_MODEL)),
                ('treatment_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes', to='dermatology.treatmentplan')),
            ],
            options={
                'verbose_name': 'Treatment Outcome',
                'verbose_name_plural': 'Treatment Outcomes',
                'db_table': 'dermatology_treatment_outcomes',
            },
        ),
    ]
