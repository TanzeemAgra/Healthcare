# Generated by Django 4.2.7 on 2025-08-11 09:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('dentistry', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CancerDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detection_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('analysis_type', models.CharField(default='oral_cancer_screening', max_length=50)),
                ('ai_model_version', models.CharField(default='CancerDetectionAI-v3.2.1', max_length=50)),
                ('processing_time_ms', models.IntegerField(help_text='AI processing time in milliseconds')),
                ('cancer_detected', models.BooleanField(default=False)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('moderate', 'Moderate Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=15)),
                ('overall_confidence', models.DecimalField(decimal_places=3, help_text='AI confidence score (0.000-1.000)', max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('cancer_probability', models.DecimalField(decimal_places=3, help_text='Probability of malignancy (0.000-1.000)', max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('predicted_cancer_type', models.CharField(blank=True, choices=[('squamous_cell_carcinoma', 'Squamous Cell Carcinoma'), ('basal_cell_carcinoma', 'Basal Cell Carcinoma'), ('adenocarcinoma', 'Adenocarcinoma'), ('melanoma', 'Melanoma'), ('lymphoma', 'Lymphoma'), ('sarcoma', 'Sarcoma'), ('unknown', 'Unknown Type')], max_length=30, null=True)),
                ('predicted_stage', models.CharField(blank=True, help_text='TNM staging (e.g., T2N0M0)', max_length=20)),
                ('predicted_grade', models.CharField(blank=True, choices=[('well_differentiated', 'Well Differentiated (Grade 1)'), ('moderately_differentiated', 'Moderately Differentiated (Grade 2)'), ('poorly_differentiated', 'Poorly Differentiated (Grade 3)'), ('undifferentiated', 'Undifferentiated (Grade 4)')], max_length=25, null=True)),
                ('invasion_depth_mm', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('lymphovascular_invasion', models.BooleanField(blank=True, null=True)),
                ('perineural_invasion', models.BooleanField(blank=True, null=True)),
                ('suspicious_areas', models.JSONField(default=list, help_text='List of suspicious areas detected')),
                ('cellular_analysis', models.JSONField(default=dict, help_text='Cellular morphology analysis')),
                ('molecular_markers', models.JSONField(default=dict, help_text='Predicted molecular markers')),
                ('risk_factors', models.JSONField(default=list, help_text='Patient risk factors')),
                ('status', models.CharField(choices=[('pending_review', 'Pending Review'), ('under_analysis', 'Under Analysis'), ('reviewed', 'Reviewed'), ('confirmed', 'Confirmed'), ('false_positive', 'False Positive'), ('requires_biopsy', 'Requires Biopsy'), ('biopsy_scheduled', 'Biopsy Scheduled'), ('treatment_planned', 'Treatment Planned')], default='pending_review', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('clinical_notes', models.TextField(blank=True)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('notification_sent', models.BooleanField(default=False)),
                ('notification_priority', models.CharField(default='routine', max_length=15)),
                ('biopsy_recommended', models.BooleanField(default=False)),
                ('biopsy_scheduled', models.BooleanField(default=False)),
                ('specialist_referral_sent', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'dentistry_cancer_detections',
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='CancerTreatmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('planned_start_date', models.DateField()),
                ('estimated_duration_weeks', models.IntegerField()),
                ('primary_treatment_type', models.CharField(choices=[('surgical_resection', 'Surgical Resection'), ('radiation_therapy', 'Radiation Therapy'), ('chemotherapy', 'Chemotherapy'), ('immunotherapy', 'Immunotherapy'), ('targeted_therapy', 'Targeted Therapy'), ('combined_therapy', 'Combined Therapy'), ('palliative_care', 'Palliative Care'), ('active_surveillance', 'Active Surveillance')], max_length=25)),
                ('treatment_description', models.TextField()),
                ('treatment_goals', models.TextField()),
                ('expected_outcomes', models.TextField()),
                ('multidisciplinary_team', models.JSONField(default=list, help_text='List of specialists involved')),
                ('lead_oncologist', models.CharField(blank=True, max_length=200)),
                ('surgeon', models.CharField(blank=True, max_length=200)),
                ('radiation_oncologist', models.CharField(blank=True, max_length=200)),
                ('treatment_options', models.JSONField(default=list, help_text='Available treatment options')),
                ('recommended_option', models.CharField(max_length=100)),
                ('alternative_options', models.JSONField(default=list)),
                ('success_rate_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('five_year_survival_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('recurrence_risk_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('follow_up_schedule', models.JSONField(default=dict)),
                ('monitoring_biomarkers', models.JSONField(default=list)),
                ('imaging_schedule', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('proposed', 'Proposed'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('modified', 'Modified'), ('discontinued', 'Discontinued')], default='proposed', max_length=20)),
                ('patient_consent_obtained', models.BooleanField(default=False)),
                ('treatment_commenced', models.BooleanField(default=False)),
                ('completion_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('treatment_response', models.TextField(blank=True)),
                ('complications', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('quality_of_life_impact', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancer_detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='dentistry.cancerdetection')),
                ('primary_dentist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_cancer_plans', to='dentistry.dentist')),
            ],
            options={
                'db_table': 'dentistry_cancer_treatment_plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CancerRiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('assessment_date', models.DateTimeField(auto_now_add=True)),
                ('age_risk_score', models.IntegerField(default=0)),
                ('tobacco_risk_score', models.IntegerField(default=0)),
                ('alcohol_risk_score', models.IntegerField(default=0)),
                ('family_history_score', models.IntegerField(default=0)),
                ('hpv_exposure_score', models.IntegerField(default=0)),
                ('sun_exposure_score', models.IntegerField(default=0)),
                ('immunosuppression_score', models.IntegerField(default=0)),
                ('previous_lesions_score', models.IntegerField(default=0)),
                ('total_risk_score', models.IntegerField(default=0)),
                ('risk_category', models.CharField(choices=[('low', 'Low Risk'), ('moderate', 'Moderate Risk'), ('high', 'High Risk'), ('very_high', 'Very High Risk')], default='low', max_length=15)),
                ('lifetime_risk_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('five_year_risk_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('screening_interval_months', models.IntegerField(default=12)),
                ('next_screening_date', models.DateField()),
                ('preventive_measures', models.JSONField(default=list)),
                ('lifestyle_modifications', models.JSONField(default=list)),
                ('detailed_risk_factors', models.JSONField(default=list)),
                ('environmental_factors', models.JSONField(default=list)),
                ('genetic_factors', models.JSONField(default=list)),
                ('notes', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dentist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancer_risk_assessments', to='dentistry.dentist')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancer_risk_assessments', to='dentistry.patient')),
            ],
            options={
                'db_table': 'dentistry_cancer_risk_assessments',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='CancerDetectionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('image_type', models.CharField(choices=[('intraoral_photo', 'Intraoral Photography'), ('extraoral_photo', 'Extraoral Photography'), ('fluorescence_imaging', 'Fluorescence Imaging'), ('dermoscopy', 'Dermoscopy'), ('biopsy_image', 'Biopsy Image'), ('histopathology', 'Histopathology'), ('radiograph', 'Radiograph'), ('ct_scan', 'CT Scan'), ('mri_scan', 'MRI Scan')], max_length=20)),
                ('original_image', models.FileField(upload_to='cancer_detection/original/%Y/%m/')),
                ('processed_image', models.FileField(blank=True, null=True, upload_to='cancer_detection/processed/%Y/%m/')),
                ('thumbnail', models.FileField(blank=True, null=True, upload_to='cancer_detection/thumbnails/%Y/%m/')),
                ('ai_annotations', models.JSONField(default=dict, help_text='AI-generated annotations and markings')),
                ('regions_of_interest', models.JSONField(default=list, help_text='Suspicious regions identified')),
                ('image_quality_score', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('camera_settings', models.JSONField(blank=True, default=dict)),
                ('lighting_conditions', models.CharField(blank=True, max_length=50)),
                ('image_resolution', models.CharField(blank=True, max_length=20)),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('analyzed_at', models.DateTimeField(blank=True, null=True)),
                ('cancer_detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='dentistry.cancerdetection')),
            ],
            options={
                'db_table': 'dentistry_cancer_detection_images',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CancerDetectionAcknowledgment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acknowledgment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('acknowledged_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledgment_method', models.CharField(choices=[('dashboard', 'Dashboard'), ('email', 'Email'), ('sms', 'SMS'), ('mobile_app', 'Mobile App'), ('direct_review', 'Direct Review')], default='dashboard', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('action_taken', models.CharField(blank=True, max_length=100)),
                ('cancer_detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dentistry.cancerdetection')),
                ('dentist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dentistry.dentist')),
            ],
            options={
                'db_table': 'dentistry_cancer_detection_acknowledgments',
                'unique_together': {('cancer_detection', 'dentist')},
            },
        ),
        migrations.AddField(
            model_name='cancerdetection',
            name='acknowledged_by',
            field=models.ManyToManyField(related_name='acknowledged_detections', through='dentistry.CancerDetectionAcknowledgment', to='dentistry.dentist'),
        ),
        migrations.AddField(
            model_name='cancerdetection',
            name='appointment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cancer_detections', to='dentistry.appointment'),
        ),
        migrations.AddField(
            model_name='cancerdetection',
            name='dentist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancer_detections', to='dentistry.dentist'),
        ),
        migrations.AddField(
            model_name='cancerdetection',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancer_detections', to='dentistry.patient'),
        ),
        migrations.AddField(
            model_name='cancerdetection',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_cancer_detections', to='dentistry.dentist'),
        ),
        migrations.CreateModel(
            name='CancerNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('notification_type', models.CharField(choices=[('cancer_detection_alert', 'Cancer Detection Alert'), ('high_risk_patient', 'High Risk Patient'), ('biopsy_reminder', 'Biopsy Reminder'), ('follow_up_due', 'Follow-up Due'), ('treatment_update', 'Treatment Update'), ('emergency_alert', 'Emergency Alert')], max_length=25)),
                ('priority', models.CharField(choices=[('routine', 'Routine'), ('high', 'High'), ('urgent', 'Urgent'), ('critical', 'Critical')], default='routine', max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('action_required', models.TextField(blank=True)),
                ('recommended_actions', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('acknowledged', 'Acknowledged'), ('expired', 'Expired')], default='pending', max_length=15)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('push_notification_sent', models.BooleanField(default=False)),
                ('dashboard_alert', models.BooleanField(default=True)),
                ('metadata', models.JSONField(default=dict)),
                ('cancer_detection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='dentistry.cancerdetection')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cancer_notifications', to='dentistry.patient')),
                ('recipient_dentists', models.ManyToManyField(related_name='cancer_notifications', to='dentistry.dentist')),
            ],
            options={
                'db_table': 'dentistry_cancer_notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['priority', 'status'], name='dentistry_c_priorit_8beb7d_idx'), models.Index(fields=['notification_type', '-created_at'], name='dentistry_c_notific_1533fd_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='cancerdetection',
            index=models.Index(fields=['cancer_detected', 'risk_level'], name='dentistry_c_cancer__de08f7_idx'),
        ),
        migrations.AddIndex(
            model_name='cancerdetection',
            index=models.Index(fields=['status', 'detected_at'], name='dentistry_c_status_aad554_idx'),
        ),
        migrations.AddIndex(
            model_name='cancerdetection',
            index=models.Index(fields=['patient', '-detected_at'], name='dentistry_c_patient_c14662_idx'),
        ),
    ]
