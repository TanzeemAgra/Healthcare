# Generated by Django 5.2.4 on 2025-08-13 09:30

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('number', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=200)),
                ('overview', models.TextField(blank=True)),
                ('air_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('device_type', models.CharField(choices=[('WEB', 'Web Browser'), ('MOBILE', 'Mobile App'), ('TV', 'Smart TV'), ('TABLET', 'Tablet'), ('DESKTOP', 'Desktop App')], max_length=20)),
                ('device_name', models.CharField(max_length=100)),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('app_version', models.CharField(blank=True, max_length=20)),
                ('last_seen_at', models.DateTimeField(auto_now=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='streaming_devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EnhancedRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('role_type', models.CharField(choices=[('SUPER_ADMIN', 'Super Administrator'), ('ADMIN_CUSTOM', 'Custom Administrator'), ('CONTENT_MANAGER', 'Content Manager'), ('USER_SUPPORT', 'User Support'), ('FINANCE_OPS', 'Finance Operations'), ('READ_ONLY_AUDITOR', 'Read-Only Auditor')], max_length=20)),
                ('is_system', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('scopes', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='netflix.enhancedrole')),
            ],
        ),
        migrations.CreateModel(
            name='ManualPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('method', models.CharField(choices=[('CASH', 'Cash'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque'), ('CREDIT_CARD', 'Credit Card'), ('DEBIT_CARD', 'Debit Card'), ('PO_INVOICE', 'Purchase Order/Invoice'), ('OTHER', 'Other')], max_length=20)),
                ('reference_no', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('INR', 'Indian Rupee'), ('CAD', 'Canadian Dollar')], default='USD', max_length=3)),
                ('date_received', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('receipt_file', models.FileField(blank=True, null=True, upload_to='payment_receipts/')),
                ('verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_payments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manual_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_received'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('VOID', 'Void')], default='DRAFT', max_length=10)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
                ('payments', models.ManyToManyField(blank=True, related_name='invoices', to='netflix.manualpayment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('number', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=200)),
                ('synopsis', models.TextField()),
                ('runtime_minutes', models.PositiveIntegerField()),
                ('air_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='netflix.season')),
            ],
            options={
                'ordering': ['number'],
                'unique_together': {('season', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('MOVIE', 'Movie'), ('SERIES', 'TV Series'), ('DOCUMENTARY', 'Documentary'), ('SHORT', 'Short Film'), ('EDUCATIONAL', 'Educational Content')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('synopsis', models.TextField()),
                ('release_year', models.PositiveIntegerField()),
                ('rating', models.CharField(choices=[('G', 'General Audiences'), ('PG', 'Parental Guidance'), ('PG13', 'Parents Strongly Cautioned'), ('R', 'Restricted'), ('NC17', 'Adults Only'), ('NR', 'Not Rated')], max_length=10)),
                ('tags', models.JSONField(default=list)),
                ('regions', models.JSONField(default=list)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('RESTRICTED', 'Restricted')], default='PUBLIC', max_length=20)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('imdb_id', models.CharField(blank=True, max_length=20)),
                ('tmdb_id', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_titles', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(related_name='titles', to='netflix.genre')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_titles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='season',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='netflix.title'),
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('kind', models.CharField(choices=[('VIDEO', 'Video File'), ('THUMBNAIL', 'Thumbnail Image'), ('SUBTITLE', 'Subtitle Track'), ('AUDIO', 'Audio Track'), ('POSTER', 'Poster Image'), ('BACKDROP', 'Backdrop Image'), ('TRAILER', 'Trailer Video')], max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('file_url', models.URLField()),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('codec', models.CharField(blank=True, max_length=20)),
                ('quality', models.CharField(blank=True, choices=[('240p', '240p'), ('360p', '360p'), ('480p', '480p'), ('720p', '720p (HD)'), ('1080p', '1080p (Full HD)'), ('1440p', '1440p (2K)'), ('2160p', '2160p (4K)')], max_length=20)),
                ('bitrate', models.PositiveIntegerField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('drm_protected', models.BooleanField(default=False)),
                ('encryption_key_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='netflix.episode')),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='netflix.title')),
            ],
        ),
        migrations.CreateModel(
            name='UserEntitlements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_status', models.CharField(choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('LOCKED', 'Locked'), ('TRIAL', 'Trial'), ('EXPIRED', 'Expired')], default='TRIAL', max_length=20)),
                ('stream_access', models.BooleanField(default=True)),
                ('max_profiles', models.PositiveIntegerField(default=1)),
                ('max_devices', models.PositiveIntegerField(default=2)),
                ('hd_enabled', models.BooleanField(default=False)),
                ('uhd_enabled', models.BooleanField(default=False)),
                ('download_enabled', models.BooleanField(default=False)),
                ('region_access', models.JSONField(default=list)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('modification_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entitlement_changes', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='netflix_entitlements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('avatar_url', models.URLField(blank=True)),
                ('maturity_rating', models.CharField(choices=[('G', 'General Audiences'), ('PG', 'Parental Guidance'), ('PG13', 'Parents Strongly Cautioned'), ('R', 'Restricted'), ('NC17', 'Adults Only')], default='R', max_length=10)),
                ('pin', models.CharField(blank=True, max_length=10)),
                ('is_kid', models.BooleanField(default=False)),
                ('language_preference', models.CharField(default='en', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewing_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('stars', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='netflix.title')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='netflix.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaybackHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('position_seconds', models.PositiveIntegerField(default=0)),
                ('duration_seconds', models.PositiveIntegerField()),
                ('completed_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('completed', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='netflix.device')),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='netflix.episode')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='netflix.title')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playback_history', to='netflix.userprofile')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserRoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_assignments_made', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assignments', to='netflix.enhancedrole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist_items', to='netflix.userprofile')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='netflix.title')),
            ],
            options={
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('UPLOAD', 'Upload'), ('DOWNLOAD', 'Download'), ('STREAM', 'Stream'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('PAYMENT', 'Payment'), ('ENTITLEMENT_CHANGE', 'Entitlement Change'), ('DEVICE_REGISTER', 'Device Register'), ('DEVICE_BLOCK', 'Device Block')], max_length=20)),
                ('entity_type', models.CharField(choices=[('user', 'User'), ('title', 'Title'), ('episode', 'Episode'), ('asset', 'Asset'), ('payment', 'Payment'), ('invoice', 'Invoice'), ('entitlement', 'Entitlement'), ('device', 'Device'), ('profile', 'Profile'), ('watchlist', 'Watchlist'), ('rating', 'Rating')], max_length=20)),
                ('entity_id', models.CharField(max_length=100)),
                ('entity_name', models.CharField(blank=True, max_length=200)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('actor_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['entity_type', 'entity_id'], name='netflix_con_entity__6afa7c_idx'), models.Index(fields=['actor_user', 'timestamp'], name='netflix_con_actor_u_a98ab0_idx'), models.Index(fields=['action', 'timestamp'], name='netflix_con_action_764b99_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='title',
            index=models.Index(fields=['type', 'visibility'], name='netflix_tit_type_f29981_idx'),
        ),
        migrations.AddIndex(
            model_name='title',
            index=models.Index(fields=['release_year'], name='netflix_tit_release_ec76aa_idx'),
        ),
        migrations.AddIndex(
            model_name='title',
            index=models.Index(fields=['created_at'], name='netflix_tit_created_698d9a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='season',
            unique_together={('title', 'number')},
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['kind', 'quality'], name='netflix_ass_kind_eec135_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['language'], name='netflix_ass_languag_020db2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userprofile',
            unique_together={('user', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('profile', 'title')},
        ),
        migrations.AddIndex(
            model_name='playbackhistory',
            index=models.Index(fields=['profile', 'updated_at'], name='netflix_pla_profile_adbb0e_idx'),
        ),
        migrations.AddIndex(
            model_name='playbackhistory',
            index=models.Index(fields=['completed'], name='netflix_pla_complet_3d37bc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userroleassignment',
            unique_together={('user', 'role')},
        ),
        migrations.AlterUniqueTogether(
            name='watchlist',
            unique_together={('profile', 'title')},
        ),
    ]
