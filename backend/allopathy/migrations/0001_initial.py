# Generated migration for allopathy app

from django.db import migrations, models
import django.db.models.deletion
import uuid
from django.contrib.auth.models import User
from django.core.validators import MinValueValidator, MaxValueValidator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllopathyHospital',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('hospital_type', models.CharField(choices=[('general', 'General Hospital'), ('specialty', 'Specialty Hospital'), ('teaching', 'Teaching Hospital'), ('research', 'Research Hospital'), ('rehabilitation', 'Rehabilitation Center'), ('psychiatric', 'Psychiatric Hospital'), ('cardiac', 'Cardiac Center'), ('cancer', 'Cancer Center'), ('trauma', 'Trauma Center'), ('pediatric', 'Pediatric Hospital')], default='general', max_length=50)),
                ('license_number', models.CharField(max_length=100, unique=True)),
                ('chief_physician', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('bed_capacity', models.PositiveIntegerField(default=0)),
                ('specialties', models.TextField(help_text='Comma-separated list of medical specialties')),
                ('accreditation', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('maintenance', 'Under Maintenance')], default='active', max_length=20)),
                ('s3_bucket', models.CharField(blank=True, max_length=255)),
                ('s3_region', models.CharField(default='us-east-1', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Allopathy Hospital',
                'verbose_name_plural': 'Allopathy Hospitals',
                'db_table': 'allopathy_hospitals',
            },
        ),
        migrations.CreateModel(
            name='AllopathyPatientS3',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('age', models.PositiveIntegerField(validators=[MinValueValidator(0), MaxValueValidator(150)])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('Unknown', 'Unknown')], default='Unknown', max_length=10)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField()),
                ('emergency_contact_name', models.CharField(max_length=200)),
                ('emergency_contact_phone', models.CharField(max_length=20)),
                ('admission_date', models.DateTimeField()),
                ('admission_type', models.CharField(choices=[('outpatient', 'Outpatient'), ('inpatient', 'Inpatient'), ('emergency', 'Emergency'), ('surgery', 'Surgery'), ('consultation', 'Consultation'), ('follow_up', 'Follow-up'), ('routine_checkup', 'Routine Checkup')], default='outpatient', max_length=50)),
                ('attending_physician', models.CharField(max_length=200)),
                ('insurance_provider', models.CharField(blank=True, max_length=200)),
                ('insurance_number', models.CharField(blank=True, max_length=100)),
                ('allergies', models.TextField(blank=True, help_text='Known allergies')),
                ('current_medications', models.TextField(blank=True, help_text='Current medications')),
                ('medical_history', models.TextField(blank=True, help_text='Previous medical history')),
                ('vital_signs', models.JSONField(blank=True, default=dict, help_text='Latest vital signs')),
                ('status', models.CharField(choices=[('active', 'Active'), ('discharged', 'Discharged'), ('admitted', 'Admitted'), ('critical', 'Critical'), ('stable', 'Stable'), ('deceased', 'Deceased'), ('transferred', 'Transferred')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to='allopathy.allopathyhospital')),
            ],
            options={
                'verbose_name': 'Allopathy Patient',
                'verbose_name_plural': 'Allopathy Patients',
                'db_table': 'allopathy_patients_s3',
            },
        ),
        migrations.CreateModel(
            name='AllopathyFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('original_name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('lab_results', 'Laboratory Results'), ('radiology', 'Radiology Reports'), ('pathology', 'Pathology Reports'), ('prescriptions', 'Prescriptions'), ('discharge_summary', 'Discharge Summary'), ('operation_notes', 'Operation Notes'), ('consultation_notes', 'Consultation Notes'), ('medical_images', 'Medical Images'), ('insurance_documents', 'Insurance Documents'), ('consent_forms', 'Consent Forms'), ('referral_letters', 'Referral Letters'), ('progress_notes', 'Progress Notes')], max_length=50)),
                ('file_size', models.BigIntegerField()),
                ('file_type', models.CharField(max_length=100)),
                ('file_hash', models.CharField(max_length=64, unique=True)),
                ('s3_key', models.CharField(max_length=500)),
                ('s3_bucket', models.CharField(max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('download_url', models.URLField(blank=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('is_confidential', models.BooleanField(default=True)),
                ('access_level', models.CharField(default='restricted', max_length=50)),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('analyzed', 'Analyzed'), ('archived', 'Archived'), ('failed', 'Failed'), ('deleted', 'Deleted')], default='uploaded', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='allopathy.allopathyhospital')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='allopathy.allopathypatients3')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.user')),
            ],
            options={
                'verbose_name': 'Allopathy File',
                'verbose_name_plural': 'Allopathy Files',
                'db_table': 'allopathy_files',
            },
        ),
        migrations.CreateModel(
            name='AllopathyAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(choices=[('lab_analysis', 'Laboratory Analysis'), ('radiology_analysis', 'Radiology Analysis'), ('symptom_analysis', 'Symptom Analysis'), ('drug_interaction', 'Drug Interaction Check'), ('diagnosis_suggestion', 'Diagnosis Suggestion'), ('treatment_recommendation', 'Treatment Recommendation'), ('prognosis_prediction', 'Prognosis Prediction'), ('risk_assessment', 'Risk Assessment'), ('vitals_analysis', 'Vital Signs Analysis'), ('ecg_analysis', 'ECG Analysis'), ('pathology_detection', 'Pathology Detection'), ('clinical_decision_support', 'Clinical Decision Support')], max_length=50)),
                ('input_data', models.JSONField(default=dict, help_text='Input data for analysis')),
                ('results', models.JSONField(default=dict, help_text='Analysis results')),
                ('confidence_score', models.FloatField(validators=[MinValueValidator(0.0), MaxValueValidator(1.0)])),
                ('recommendations', models.TextField(blank=True)),
                ('risk_factors', models.JSONField(blank=True, default=list)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('reviewed', 'Reviewed'), ('approved', 'Approved')], default='pending', max_length=20)),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('ai_model_version', models.CharField(default='1.0', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='allopathy.allopathyfile')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='allopathy.allopathyhospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='allopathy.allopathypatients3')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_analyses', to='auth.user')),
            ],
            options={
                'verbose_name': 'Allopathy Analysis',
                'verbose_name_plural': 'Allopathy Analyses',
                'db_table': 'allopathy_analyses',
            },
        ),
        migrations.CreateModel(
            name='AllopathyMedicalRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('admission_date', models.DateTimeField()),
                ('discharge_date', models.DateTimeField(blank=True, null=True)),
                ('chief_complaint', models.TextField()),
                ('history_of_present_illness', models.TextField()),
                ('past_medical_history', models.TextField()),
                ('family_history', models.TextField(blank=True)),
                ('social_history', models.TextField(blank=True)),
                ('review_of_systems', models.TextField(blank=True)),
                ('physical_examination', models.TextField()),
                ('assessment_and_plan', models.TextField()),
                ('attending_physician', models.CharField(max_length=200)),
                ('department', models.CharField(max_length=100)),
                ('room_number', models.CharField(blank=True, max_length=20)),
                ('diagnosis_codes', models.JSONField(default=list, help_text='ICD-10 diagnosis codes')),
                ('procedures', models.JSONField(default=list, help_text='Procedures performed')),
                ('lab_orders', models.JSONField(default=list, help_text='Laboratory orders')),
                ('imaging_orders', models.JSONField(default=list, help_text='Imaging orders')),
                ('consultations', models.JSONField(default=list, help_text='Consultations requested')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('transferred', 'Transferred')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='allopathy.allopathypatients3')),
            ],
            options={
                'verbose_name': 'Medical Record',
                'verbose_name_plural': 'Medical Records',
                'db_table': 'allopathy_medical_records',
            },
        ),
        migrations.CreateModel(
            name='AllopathyTreatmentPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plan_date', models.DateField()),
                ('diagnosis', models.TextField()),
                ('treatment_plan', models.TextField()),
                ('medications', models.JSONField(default=list, help_text='Prescribed medications')),
                ('procedures_planned', models.JSONField(default=list, help_text='Planned procedures')),
                ('follow_up_instructions', models.TextField()),
                ('diet_instructions', models.TextField(blank=True)),
                ('activity_restrictions', models.TextField(blank=True)),
                ('prescribed_by', models.CharField(max_length=200)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('expected_duration', models.DurationField(blank=True, null=True)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('goals', models.TextField(help_text='Treatment goals and expected outcomes')),
                ('contraindications', models.TextField(blank=True)),
                ('monitoring_parameters', models.JSONField(default=list, help_text='Parameters to monitor')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('discontinued', 'Discontinued'), ('modified', 'Modified'), ('on_hold', 'On Hold')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='allopathy.allopathymedicalrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='allopathy.allopathypatients3')),
            ],
            options={
                'verbose_name': 'Treatment Plan',
                'verbose_name_plural': 'Treatment Plans',
                'db_table': 'allopathy_treatment_plans',
            },
        ),
        # Add indexes
        migrations.AddIndex(
            model_name='allopathypatients3',
            index=models.Index(fields=['patient_id'], name='allopathy_patients_s3_patient_id_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathypatients3',
            index=models.Index(fields=['admission_date'], name='allopathy_patients_s3_admission_date_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathypatients3',
            index=models.Index(fields=['status'], name='allopathy_patients_s3_status_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathyfile',
            index=models.Index(fields=['category'], name='allopathy_files_category_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathyfile',
            index=models.Index(fields=['upload_date'], name='allopathy_files_upload_date_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathyfile',
            index=models.Index(fields=['status'], name='allopathy_files_status_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathyanalysis',
            index=models.Index(fields=['analysis_type'], name='allopathy_analyses_analysis_type_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathyanalysis',
            index=models.Index(fields=['status'], name='allopathy_analyses_status_idx'),
        ),
        migrations.AddIndex(
            model_name='allopathyanalysis',
            index=models.Index(fields=['created_at'], name='allopathy_analyses_created_at_idx'),
        ),
    ]
