# Generated by Django 4.2.7 on 2025-09-04 06:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cosmetology", "0002_cosmeticgynecologyclient_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CosmetologyClientS3",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("client_external_id", models.CharField(blank=True, max_length=50)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("female", "Female"),
                            ("male", "Male"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("address", models.TextField(blank=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=200),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=20),
                ),
                ("referring_source", models.CharField(blank=True, max_length=200)),
                (
                    "skin_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("normal", "Normal"),
                            ("dry", "Dry"),
                            ("oily", "Oily"),
                            ("combination", "Combination"),
                            ("sensitive", "Sensitive"),
                            ("mature", "Mature"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "fitzpatrick_scale",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("type_1", "Type I - Very Fair"),
                            ("type_2", "Type II - Fair"),
                            ("type_3", "Type III - Medium"),
                            ("type_4", "Type IV - Olive"),
                            ("type_5", "Type V - Brown"),
                            ("type_6", "Type VI - Dark Brown"),
                        ],
                        max_length=10,
                    ),
                ),
                ("allergies", models.TextField(blank=True)),
                ("skin_concerns", models.JSONField(blank=True, default=list)),
                ("beauty_goals", models.JSONField(blank=True, default=list)),
                ("s3_folder_path", models.CharField(blank=True, max_length=300)),
                ("s3_folders", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_visit", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Cosmetology Client (S3)",
                "verbose_name_plural": "Cosmetology Clients (S3)",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CosmetologySalon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "salon_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "institution_type",
                    models.CharField(
                        choices=[
                            ("beauty_salon", "Beauty Salon"),
                            ("spa", "Medical Spa"),
                            ("clinic", "Aesthetic Clinic"),
                            ("dermatology_center", "Dermatology Center"),
                            ("wellness_center", "Wellness Center"),
                            ("cosmetic_surgery", "Cosmetic Surgery Center"),
                            ("training_academy", "Beauty Training Academy"),
                            ("product_lab", "Product Development Lab"),
                        ],
                        max_length=30,
                    ),
                ),
                ("license_number", models.CharField(max_length=100, unique=True)),
                ("accreditation_body", models.CharField(blank=True, max_length=100)),
                ("head_aesthetician", models.CharField(max_length=200)),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("website", models.URLField(blank=True)),
                ("address", models.TextField()),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("zip_code", models.CharField(max_length=20)),
                ("operating_hours", models.CharField(blank=True, max_length=200)),
                ("emergency_contact", models.CharField(blank=True, max_length=200)),
                ("s3_bucket", models.CharField(blank=True, max_length=100)),
                ("s3_folder_path", models.CharField(blank=True, max_length=200)),
                ("s3_folders", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Cosmetology Salon",
                "verbose_name_plural": "Cosmetology Salons",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CosmetologyTreatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "treatment_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "treatment_type",
                    models.CharField(
                        choices=[
                            ("facial", "Facial Treatment"),
                            ("chemical_peel", "Chemical Peel"),
                            ("microdermabrasion", "Microdermabrasion"),
                            ("laser_treatment", "Laser Treatment"),
                            ("botox", "Botox Treatment"),
                            ("fillers", "Dermal Fillers"),
                            ("skin_rejuvenation", "Skin Rejuvenation"),
                            ("acne_treatment", "Acne Treatment"),
                            ("anti_aging", "Anti-Aging Treatment"),
                            ("hair_removal", "Hair Removal"),
                            ("body_contouring", "Body Contouring"),
                            ("makeup_session", "Makeup Session"),
                            ("consultation", "Consultation"),
                        ],
                        max_length=30,
                    ),
                ),
                ("treatment_date", models.DateTimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=60)),
                ("practitioner", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("products_used", models.JSONField(blank=True, default=list)),
                ("techniques_applied", models.JSONField(blank=True, default=list)),
                ("equipment_used", models.JSONField(blank=True, default=list)),
                ("treatment_notes", models.TextField(blank=True)),
                ("client_feedback", models.TextField(blank=True)),
                ("practitioner_observations", models.TextField(blank=True)),
                ("before_photos", models.JSONField(blank=True, default=list)),
                ("after_photos", models.JSONField(blank=True, default=list)),
                (
                    "next_appointment_recommended",
                    models.DateField(blank=True, null=True),
                ),
                ("home_care_instructions", models.TextField(blank=True)),
                ("cost", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_applied",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("final_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("rescheduled", "Rescheduled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="treatments",
                        to="cosmetology.cosmetologyclients3",
                    ),
                ),
                (
                    "salon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cosmetology.cosmetologysalon",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cosmetology Treatment",
                "verbose_name_plural": "Cosmetology Treatments",
                "ordering": ["-treatment_date"],
            },
        ),
        migrations.CreateModel(
            name="CosmetologyFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("original_name", models.CharField(max_length=255)),
                ("filename", models.CharField(max_length=255)),
                ("file_size", models.BigIntegerField()),
                ("content_type", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("before_after_photos", "Before/After Photos"),
                            ("treatment_plans", "Treatment Plans"),
                            ("skin_analysis", "Skin Analysis Reports"),
                            ("client_consultations", "Client Consultations"),
                            ("procedure_documentation", "Procedure Documentation"),
                            ("product_formulations", "Product Formulations"),
                            ("allergy_patch_tests", "Allergy & Patch Tests"),
                            ("progress_tracking", "Progress Tracking"),
                            ("product_recommendations", "Product Recommendations"),
                            ("training_materials", "Training Materials"),
                        ],
                        max_length=30,
                    ),
                ),
                ("s3_key", models.CharField(max_length=500)),
                ("s3_bucket", models.CharField(max_length=100)),
                ("s3_url", models.URLField(blank=True)),
                ("description", models.TextField(blank=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploaded", "Uploaded"),
                            ("processing", "Processing"),
                            ("analyzed", "Analyzed"),
                            ("archived", "Archived"),
                            ("deleted", "Deleted"),
                        ],
                        default="uploaded",
                        max_length=20,
                    ),
                ),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cosmetology.cosmetologyclients3",
                    ),
                ),
                (
                    "salon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cosmetology.cosmetologysalon",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Cosmetology File",
                "verbose_name_plural": "Cosmetology Files",
                "ordering": ["-upload_date"],
            },
        ),
        migrations.AddField(
            model_name="cosmetologyclients3",
            name="salon",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="clients",
                to="cosmetology.cosmetologysalon",
            ),
        ),
        migrations.CreateModel(
            name="CosmetologyAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analysis_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("skin_condition_analysis", "Skin Condition Analysis"),
                            ("aging_assessment", "Aging Assessment"),
                            ("color_matching", "Color Matching"),
                            ("treatment_effectiveness", "Treatment Effectiveness"),
                            ("product_recommendation", "Product Recommendation"),
                            ("facial_symmetry", "Facial Symmetry Analysis"),
                        ],
                        max_length=30,
                    ),
                ),
                ("analysis_date", models.DateTimeField(auto_now_add=True)),
                ("ai_model_used", models.CharField(blank=True, max_length=100)),
                (
                    "confidence_score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ]
                    ),
                ),
                ("analysis_results", models.JSONField(default=dict)),
                ("recommendations", models.JSONField(blank=True, default=list)),
                ("risk_factors", models.JSONField(blank=True, default=list)),
                ("follow_up_needed", models.BooleanField(default=False)),
                ("validation_date", models.DateTimeField(blank=True, null=True)),
                ("validation_notes", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("validated", "Validated"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "processing_time_seconds",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("error_message", models.TextField(blank=True)),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cosmetology.cosmetologyclients3",
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cosmetology.cosmetologyfile",
                    ),
                ),
                (
                    "salon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cosmetology.cosmetologysalon",
                    ),
                ),
                (
                    "validated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Cosmetology Analysis",
                "verbose_name_plural": "Cosmetology Analyses",
                "ordering": ["-analysis_date"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="cosmetologyclients3",
            unique_together={("salon", "client_external_id")},
        ),
    ]
