# Generated by Django 4.2.7 on 2025-09-03 09:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("secureneat", "0002_s3librarybook_mcqgenerationhistory_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="PatientFolder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "patient_id",
                    models.CharField(help_text="Patient identifier", max_length=100),
                ),
                (
                    "module",
                    models.CharField(
                        choices=[
                            ("radiology", "Radiology"),
                            ("medicine", "Medicine"),
                            ("dentistry", "Dentistry"),
                            ("dermatology", "Dermatology"),
                            ("pathology", "Pathology"),
                            ("homeopathy", "Homeopathy"),
                            ("allopathy", "Allopathy"),
                            ("cosmetology", "Cosmetology"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "s3_path",
                    models.CharField(
                        help_text="S3 path to patient folder", max_length=500
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("archived", "Archived"),
                            ("transferred", "Transferred"),
                            ("deleted", "Deleted"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "encrypted_metadata_key",
                    models.CharField(
                        help_text="S3 key for encrypted patient metadata",
                        max_length=200,
                    ),
                ),
                (
                    "access_permissions",
                    models.JSONField(
                        default=dict, help_text="JSON field for access permissions"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                (
                    "assigned_doctor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_patient_folders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_patient_folders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("patient_id", "module", "assigned_doctor")},
            },
        ),
        migrations.AlterModelOptions(
            name="mcqgenerationhistory",
            options={},
        ),
        migrations.RemoveField(
            model_name="mcqgenerationhistory",
            name="generation_time_seconds",
        ),
        migrations.CreateModel(
            name="S3FileRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "s3_key",
                    models.CharField(
                        help_text="Full S3 key/path", max_length=500, unique=True
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("medical_record", "Medical Record"),
                            ("lab_result", "Lab Result"),
                            ("imaging", "Medical Imaging"),
                            ("prescription", "Prescription"),
                            ("treatment_plan", "Treatment Plan"),
                            ("progress_note", "Progress Note"),
                            ("discharge_summary", "Discharge Summary"),
                            ("consent_form", "Consent Form"),
                            ("report", "Report"),
                            ("document", "General Document"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("other", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                ("content_type", models.CharField(max_length=100)),
                ("file_size_bytes", models.BigIntegerField()),
                (
                    "checksum",
                    models.CharField(help_text="SHA256 checksum", max_length=64),
                ),
                ("is_encrypted", models.BooleanField(default=True)),
                (
                    "encryption_algorithm",
                    models.CharField(default="Fernet", max_length=50),
                ),
                (
                    "access_level",
                    models.CharField(default="hipaa_protected", max_length=30),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploaded", "Uploaded"),
                            ("processing", "Processing"),
                            ("processed", "Processed"),
                            ("archived", "Archived"),
                            ("deleted", "Deleted"),
                            ("quarantined", "Quarantined"),
                        ],
                        default="uploaded",
                        max_length=20,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional file metadata"
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                (
                    "patient_folder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="secureneat.patientfolder",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="UserWorkspace",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "module",
                    models.CharField(
                        choices=[
                            ("radiology", "Radiology"),
                            ("medicine", "Medicine"),
                            ("dentistry", "Dentistry"),
                            ("dermatology", "Dermatology"),
                            ("pathology", "Pathology"),
                            ("homeopathy", "Homeopathy"),
                            ("allopathy", "Allopathy"),
                            ("cosmetology", "Cosmetology"),
                            ("dna_sequencing", "DNA Sequencing"),
                            ("secureneat", "SecureNeat"),
                            ("netflix", "Netflix"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "s3_path",
                    models.CharField(
                        help_text="Base S3 path for user workspace", max_length=500
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("suspended", "Suspended"),
                            ("archived", "Archived"),
                            ("deleted", "Deleted"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "storage_quota_gb",
                    models.IntegerField(default=10, help_text="Storage quota in GB"),
                ),
                (
                    "current_usage_bytes",
                    models.BigIntegerField(
                        default=0, help_text="Current storage usage in bytes"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s3_workspaces",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("user", "module")},
            },
        ),
        migrations.CreateModel(
            name="S3AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("workspace_created", "Workspace Created"),
                            ("patient_folder_created", "Patient Folder Created"),
                            ("file_uploaded", "File Uploaded"),
                            ("file_accessed", "File Accessed"),
                            ("file_downloaded", "File Downloaded"),
                            ("file_deleted", "File Deleted"),
                            ("file_moved", "File Moved"),
                            ("permission_granted", "Permission Granted"),
                            ("permission_revoked", "Permission Revoked"),
                            ("folder_accessed", "Folder Accessed"),
                            ("metadata_updated", "Metadata Updated"),
                            ("backup_created", "Backup Created"),
                            ("system_maintenance", "System Maintenance"),
                        ],
                        max_length=50,
                    ),
                ),
                ("module", models.CharField(max_length=50)),
                ("patient_id", models.CharField(blank=True, max_length=100, null=True)),
                ("s3_key", models.CharField(blank=True, max_length=500, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("session_id", models.CharField(blank=True, max_length=100, null=True)),
                ("action_details", models.JSONField(default=dict)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="low",
                        max_length=20,
                    ),
                ),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="secureneat__user_id_509278_idx",
                    ),
                    models.Index(
                        fields=["patient_id", "timestamp"],
                        name="secureneat__patient_de5a36_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="secureneat__action_1fd45b_idx",
                    ),
                    models.Index(
                        fields=["risk_level", "timestamp"],
                        name="secureneat__risk_le_74723a_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AccessPermission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "permission_type",
                    models.CharField(
                        choices=[
                            ("read", "Read"),
                            ("write", "Write"),
                            ("delete", "Delete"),
                            ("admin", "Admin"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("workspace", "Workspace"),
                            ("patient_folder", "Patient Folder"),
                            ("file", "File"),
                            ("module", "Module"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "resource_id",
                    models.CharField(
                        help_text="ID of the resource (workspace, folder, file)",
                        max_length=100,
                    ),
                ),
                ("module", models.CharField(max_length=50)),
                ("granted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Leave blank for permanent access",
                        null=True,
                    ),
                ),
                (
                    "ip_restrictions",
                    models.JSONField(
                        default=list, help_text="List of allowed IP addresses/ranges"
                    ),
                ),
                (
                    "time_restrictions",
                    models.JSONField(
                        default=dict, help_text="Time-based access restrictions"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("revoked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "granted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="granted_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "revoked_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="revoked_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s3_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-granted_at"],
                "unique_together": {
                    ("user", "permission_type", "resource_type", "resource_id")
                },
            },
        ),
    ]
