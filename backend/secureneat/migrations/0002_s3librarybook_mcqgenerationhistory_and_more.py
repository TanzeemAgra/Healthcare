# Generated by Django 4.2.7 on 2025-08-12 12:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('secureneat', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='S3LibraryBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('s3_key', models.CharField(max_length=1024, unique=True)),
                ('category', models.CharField(choices=[('medical_books', 'Medical Books'), ('nursing_books', 'Nursing Books'), ('research_papers', 'Research Papers'), ('study_notes', 'Study Notes'), ('reference_materials', 'Reference Materials'), ('exam_prep', 'Exam Preparation'), ('clinical_guidelines', 'Clinical Guidelines'), ('medical_journals', 'Medical Journals')], max_length=50)),
                ('subcategory', models.CharField(blank=True, max_length=100, null=True)),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('author', models.CharField(blank=True, max_length=300, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('publication_year', models.IntegerField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('access_count', models.IntegerField(default=0)),
                ('mcq_generation_count', models.IntegerField(default=0)),
                ('last_mcq_generated', models.DateTimeField(blank=True, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='MCQGenerationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s3_key', models.CharField(max_length=1024)),
                ('filename', models.CharField(max_length=255)),
                ('num_questions', models.IntegerField()),
                ('generation_type', models.CharField(choices=[('full_book_wise', 'Full Book'), ('chapter_wise', 'Chapter Wise')], max_length=20)),
                ('questions_generated', models.IntegerField(default=0)),
                ('generation_successful', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generation_time_seconds', models.FloatField(blank=True, null=True)),
                ('library_book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='secureneat.s3librarybook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='s3librarybook',
            index=models.Index(fields=['category', 'subcategory'], name='secureneat__categor_0293d0_idx'),
        ),
        migrations.AddIndex(
            model_name='s3librarybook',
            index=models.Index(fields=['tags'], name='secureneat__tags_ef10c3_idx'),
        ),
        migrations.AddIndex(
            model_name='s3librarybook',
            index=models.Index(fields=['-last_accessed'], name='secureneat__last_ac_29adce_idx'),
        ),
    ]
